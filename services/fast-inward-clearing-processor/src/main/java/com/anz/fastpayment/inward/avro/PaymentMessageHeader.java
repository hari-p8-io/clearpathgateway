/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentMessageHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8714533365488195120L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentMessageHeader\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"ClientDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClientName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PartyId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentMessageHeader> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentMessageHeader> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentMessageHeader> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentMessageHeader> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentMessageHeader> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentMessageHeader to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentMessageHeader from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentMessageHeader instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentMessageHeader fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String ClientDt;
  private java.lang.String ClientName;
  private java.lang.String PartyId;
  private java.lang.String Version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentMessageHeader() {}

  /**
   * All-args constructor.
   * @param ClientDt The new value for ClientDt
   * @param ClientName The new value for ClientName
   * @param PartyId The new value for PartyId
   * @param Version The new value for Version
   */
  public PaymentMessageHeader(java.lang.String ClientDt, java.lang.String ClientName, java.lang.String PartyId, java.lang.String Version) {
    this.ClientDt = ClientDt;
    this.ClientName = ClientName;
    this.PartyId = PartyId;
    this.Version = Version;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ClientDt;
    case 1: return ClientName;
    case 2: return PartyId;
    case 3: return Version;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ClientDt = value$ != null ? value$.toString() : null; break;
    case 1: ClientName = value$ != null ? value$.toString() : null; break;
    case 2: PartyId = value$ != null ? value$.toString() : null; break;
    case 3: Version = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ClientDt' field.
   * @return The value of the 'ClientDt' field.
   */
  public java.lang.String getClientDt() {
    return ClientDt;
  }


  /**
   * Sets the value of the 'ClientDt' field.
   * @param value the value to set.
   */
  public void setClientDt(java.lang.String value) {
    this.ClientDt = value;
  }

  /**
   * Gets the value of the 'ClientName' field.
   * @return The value of the 'ClientName' field.
   */
  public java.lang.String getClientName() {
    return ClientName;
  }


  /**
   * Sets the value of the 'ClientName' field.
   * @param value the value to set.
   */
  public void setClientName(java.lang.String value) {
    this.ClientName = value;
  }

  /**
   * Gets the value of the 'PartyId' field.
   * @return The value of the 'PartyId' field.
   */
  public java.lang.String getPartyId() {
    return PartyId;
  }


  /**
   * Sets the value of the 'PartyId' field.
   * @param value the value to set.
   */
  public void setPartyId(java.lang.String value) {
    this.PartyId = value;
  }

  /**
   * Gets the value of the 'Version' field.
   * @return The value of the 'Version' field.
   */
  public java.lang.String getVersion() {
    return Version;
  }


  /**
   * Sets the value of the 'Version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.String value) {
    this.Version = value;
  }

  /**
   * Creates a new PaymentMessageHeader RecordBuilder.
   * @return A new PaymentMessageHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder();
  }

  /**
   * Creates a new PaymentMessageHeader RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentMessageHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder(other);
    }
  }

  /**
   * Creates a new PaymentMessageHeader RecordBuilder by copying an existing PaymentMessageHeader instance.
   * @param other The existing instance to copy.
   * @return A new PaymentMessageHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentMessageHeader other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentMessageHeader instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentMessageHeader>
    implements org.apache.avro.data.RecordBuilder<PaymentMessageHeader> {

    private java.lang.String ClientDt;
    private java.lang.String ClientName;
    private java.lang.String PartyId;
    private java.lang.String Version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ClientDt)) {
        this.ClientDt = data().deepCopy(fields()[0].schema(), other.ClientDt);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ClientName)) {
        this.ClientName = data().deepCopy(fields()[1].schema(), other.ClientName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.PartyId)) {
        this.PartyId = data().deepCopy(fields()[2].schema(), other.PartyId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.Version)) {
        this.Version = data().deepCopy(fields()[3].schema(), other.Version);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentMessageHeader instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentMessageHeader other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.ClientDt)) {
        this.ClientDt = data().deepCopy(fields()[0].schema(), other.ClientDt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ClientName)) {
        this.ClientName = data().deepCopy(fields()[1].schema(), other.ClientName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PartyId)) {
        this.PartyId = data().deepCopy(fields()[2].schema(), other.PartyId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Version)) {
        this.Version = data().deepCopy(fields()[3].schema(), other.Version);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'ClientDt' field.
      * @return The value.
      */
    public java.lang.String getClientDt() {
      return ClientDt;
    }


    /**
      * Sets the value of the 'ClientDt' field.
      * @param value The value of 'ClientDt'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder setClientDt(java.lang.String value) {
      validate(fields()[0], value);
      this.ClientDt = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ClientDt' field has been set.
      * @return True if the 'ClientDt' field has been set, false otherwise.
      */
    public boolean hasClientDt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ClientDt' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder clearClientDt() {
      ClientDt = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClientName' field.
      * @return The value.
      */
    public java.lang.String getClientName() {
      return ClientName;
    }


    /**
      * Sets the value of the 'ClientName' field.
      * @param value The value of 'ClientName'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder setClientName(java.lang.String value) {
      validate(fields()[1], value);
      this.ClientName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ClientName' field has been set.
      * @return True if the 'ClientName' field has been set, false otherwise.
      */
    public boolean hasClientName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ClientName' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder clearClientName() {
      ClientName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'PartyId' field.
      * @return The value.
      */
    public java.lang.String getPartyId() {
      return PartyId;
    }


    /**
      * Sets the value of the 'PartyId' field.
      * @param value The value of 'PartyId'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder setPartyId(java.lang.String value) {
      validate(fields()[2], value);
      this.PartyId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'PartyId' field has been set.
      * @return True if the 'PartyId' field has been set, false otherwise.
      */
    public boolean hasPartyId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'PartyId' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder clearPartyId() {
      PartyId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Version' field.
      * @return The value.
      */
    public java.lang.String getVersion() {
      return Version;
    }


    /**
      * Sets the value of the 'Version' field.
      * @param value The value of 'Version'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder setVersion(java.lang.String value) {
      validate(fields()[3], value);
      this.Version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Version' field has been set.
      * @return True if the 'Version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Version' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentMessageHeader.Builder clearVersion() {
      Version = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentMessageHeader build() {
      try {
        PaymentMessageHeader record = new PaymentMessageHeader();
        record.ClientDt = fieldSetFlags()[0] ? this.ClientDt : (java.lang.String) defaultValue(fields()[0]);
        record.ClientName = fieldSetFlags()[1] ? this.ClientName : (java.lang.String) defaultValue(fields()[1]);
        record.PartyId = fieldSetFlags()[2] ? this.PartyId : (java.lang.String) defaultValue(fields()[2]);
        record.Version = fieldSetFlags()[3] ? this.Version : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentMessageHeader>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentMessageHeader>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentMessageHeader>
    READER$ = (org.apache.avro.io.DatumReader<PaymentMessageHeader>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.ClientDt == null) {
      throw new IllegalStateException("ClientDt cannot be null for PaymentMessageHeader encoding");
    }
    out.writeString(this.ClientDt);

    if (this.ClientName == null) {
      throw new IllegalStateException("ClientName cannot be null for PaymentMessageHeader encoding");
    }
    out.writeString(this.ClientName);

    if (this.PartyId == null) {
      throw new IllegalStateException("PartyId cannot be null for PaymentMessageHeader encoding");
    }
    out.writeString(this.PartyId);

    if (this.Version == null) {
      throw new IllegalStateException("Version cannot be null for PaymentMessageHeader encoding");
    }
    out.writeString(this.Version);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ClientDt = in.readString();

      this.ClientName = in.readString();

      this.PartyId = in.readString();

      this.Version = in.readString();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ClientDt = in.readString();
          break;

        case 1:
          this.ClientName = in.readString();
          break;

        case 2:
          this.PartyId = in.readString();
          break;

        case 3:
          this.Version = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










