/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Complex Unified Payment Message for Fast Payment System with Header, Body, and Processing Context */
@org.apache.avro.specific.AvroGenerated
public class UnifiedPaymentMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9032470680774846856L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UnifiedPaymentMessage\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"doc\":\"Complex Unified Payment Message for Fast Payment System with Header, Body, and Processing Context\",\"fields\":[{\"name\":\"Header\",\"type\":{\"type\":\"record\",\"name\":\"MessageHeader\",\"fields\":[{\"name\":\"ComponentName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Component name (e.g., PSPAPFAFAST)\"},{\"name\":\"UUID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for the message\"},{\"name\":\"EventInfo\",\"type\":{\"type\":\"record\",\"name\":\"EventInformation\",\"fields\":[{\"name\":\"EventCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Event code (e.g., P.PSP.STS.M.OP_RPI.100)\"},{\"name\":\"EventDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the event\"},{\"name\":\"EventID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique event identifier\"},{\"name\":\"EventType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Type of event (e.g., PE)\"},{\"name\":\"EventProducer\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Producer of the event\"},{\"name\":\"EventTS\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Event timestamp\"},{\"name\":\"EventTopics\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Kafka topics for the event\"},{\"name\":\"SystemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"System identifier\"},{\"name\":\"Events\",\"type\":{\"type\":\"record\",\"name\":\"EventCollection\",\"fields\":[{\"name\":\"Event\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EventDetail\",\"fields\":[{\"name\":\"EventCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"EventID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}}]}},{\"name\":\"EventVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}},{\"name\":\"ReplyToQueue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Reply queue name\"},{\"name\":\"ReqMap\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"MUID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Message unique identifier\"},{\"name\":\"Channel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Channel identifier (e.g., G3I)\"},{\"name\":\"Direction\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Direction (I for Inward, O for Outward)\"},{\"name\":\"RcvdTS\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Received timestamp\"},{\"name\":\"DomainName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Domain name (e.g., PAYMENTS)\"},{\"name\":\"DomainType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Domain type (e.g., PAYMENT)\"}]}},{\"name\":\"Body\",\"type\":{\"type\":\"record\",\"name\":\"MessageBody\",\"fields\":[{\"name\":\"PmtAddRq\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PaymentAddRequest\",\"fields\":[{\"name\":\"RqUID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Request unique identifier\"},{\"name\":\"MsgHdr\",\"type\":{\"type\":\"record\",\"name\":\"PaymentMessageHeader\",\"fields\":[{\"name\":\"ClientDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClientName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PartyId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"PayHdr\",\"type\":{\"type\":\"record\",\"name\":\"PaymentHeader\",\"fields\":[{\"name\":\"PODsID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment identifier\"},{\"name\":\"ThirdPartyPayID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentTRN\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentRetRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ProcDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"FromFIData\",\"type\":{\"type\":\"record\",\"name\":\"FromFinancialInstitution\",\"fields\":[{\"name\":\"Country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"FromCust\",\"type\":{\"type\":\"record\",\"name\":\"FromCustomer\",\"fields\":[{\"name\":\"Name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"FromAcct\",\"type\":{\"type\":\"record\",\"name\":\"FromAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Account identifier\",\"default\":null},{\"name\":\"AcctSys\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"AcctGrp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PmtAuthMethod\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Narrative\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"CurCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Currency code\"},{\"name\":\"Amount\",\"type\":\"double\",\"doc\":\"Transaction amount (legacy field - use AmountMinor for precision)\"},{\"name\":\"AmountMinor\",\"type\":\"long\",\"doc\":\"Transaction amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":0},{\"name\":\"AcctUse\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"ToFIData\",\"type\":{\"type\":\"record\",\"name\":\"ToFinancialInstitution\",\"fields\":[{\"name\":\"Country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Clearing\",\"type\":{\"type\":\"record\",\"name\":\"ClearingInfo\",\"fields\":[{\"name\":\"ClearPref\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"ToBene\",\"type\":{\"type\":\"record\",\"name\":\"ToBeneficiary\",\"fields\":[{\"name\":\"Name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"ToAcct\",\"type\":{\"type\":\"record\",\"name\":\"ToAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Account identifier\",\"default\":null},{\"name\":\"CurCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Currency code\"},{\"name\":\"Amount\",\"type\":\"double\",\"doc\":\"Transaction amount (legacy field - use AmountMinor for precision)\"},{\"name\":\"AmountMinor\",\"type\":\"long\",\"doc\":\"Transaction amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":0},{\"name\":\"Narrative\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"AcctUse\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Fees\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}}}]}},{\"name\":\"Procctxt\",\"type\":{\"type\":\"record\",\"name\":\"ProcessingContext\",\"fields\":[{\"name\":\"sideEffect\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"softFail\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"PmtDtls\",\"type\":{\"type\":\"record\",\"name\":\"PaymentDetails\",\"fields\":[{\"name\":\"PmtCtxt\",\"type\":{\"type\":\"record\",\"name\":\"PaymentContext\",\"fields\":[{\"name\":\"PuId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IntnSrc\",\"type\":{\"type\":\"record\",\"name\":\"IntentionSource\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}},{\"name\":\"ProcCtryCd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdClrgPref\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdMoPCat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PmtCtgry\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment category (e.g., DD for Direct Debit)\"},{\"name\":\"actClrMethod\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"actlMtdOfPmtCtgry\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FIDCIdentifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FICCIdentifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"VAM\",\"type\":{\"type\":\"string\",","\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRAccountNo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRAccountSys\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRBookCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}},{\"name\":\"messages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MessageInstruction\",\"fields\":[{\"name\":\"instruction\",\"type\":{\"type\":\"record\",\"name\":\"Instruction\",\"fields\":[{\"name\":\"MsgDef\",\"type\":{\"type\":\"record\",\"name\":\"MessageDefinition\",\"fields\":[{\"name\":\"MsgType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Schema\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"MsgCtxt\",\"type\":{\"type\":\"record\",\"name\":\"MessageContext\",\"fields\":[{\"name\":\"OrigMsgTyp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdClrgPref\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdMoPCat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Site\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"BaseAmt\",\"type\":[\"null\",\"double\"],\"doc\":\"Base amount (legacy field - use BaseAmtMinor for precision)\",\"default\":null},{\"name\":\"BaseAmtMinor\",\"type\":[\"null\",\"long\"],\"doc\":\"Base amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":null},{\"name\":\"BaseCcy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SenderBIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ProcCtryCd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Department\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"MsgId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Direction\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"MsgAddRq\",\"type\":{\"type\":\"record\",\"name\":\"MessageAddRequest\",\"fields\":[{\"name\":\"OrigMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"MsgDtls\",\"type\":{\"type\":\"record\",\"name\":\"MessageDetails\",\"fields\":[{\"name\":\"DrctDbtTxInf\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransactionInfo\",\"fields\":[{\"name\":\"PmtId\",\"type\":{\"type\":\"record\",\"name\":\"PaymentId\",\"fields\":[{\"name\":\"InstrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TxId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"EndToEndId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClrSysRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"IntrBkSttlmAmt\",\"type\":\"double\",\"doc\":\"Inter-bank settlement amount (legacy field - use IntrBkSttlmAmtMinor for precision)\"},{\"name\":\"IntrBkSttlmAmtMinor\",\"type\":\"long\",\"doc\":\"Inter-bank settlement amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":0},{\"name\":\"IntrBkSttlmCCY\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IntrBkSttlmDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstgAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructingAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"InstdAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructedAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Dbtr\",\"type\":{\"type\":\"record\",\"name\":\"Debtor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DbtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"DbtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Cdtr\",\"type\":{\"type\":\"record\",\"name\":\"Creditor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"Purp\",\"type\":{\"type\":\"record\",\"name\":\"Purpose\",\"fields\":[{\"name\":\"Cd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"RmtInf\",\"type\":{\"type\":\"record\",\"name\":\"RemittanceInformation\",\"fields\":[{\"name\":\"Ustrd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DrctDbtTx\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransaction\",\"fields\":[{\"name\":\"MndtRltdInf\",\"type\":{\"type\":\"record\",\"name\":\"MandateRelatedInformation\",\"fields\":[{\"name\":\"MndtId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]}}]}}]}}]}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UnifiedPaymentMessage> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UnifiedPaymentMessage> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UnifiedPaymentMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UnifiedPaymentMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UnifiedPaymentMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UnifiedPaymentMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UnifiedPaymentMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UnifiedPaymentMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UnifiedPaymentMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.anz.fastpayment.inward.avro.MessageHeader Header;
  private com.anz.fastpayment.inward.avro.MessageBody Body;
  private com.anz.fastpayment.inward.avro.ProcessingContext Procctxt;
  private java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> messages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UnifiedPaymentMessage() {}

  /**
   * All-args constructor.
   * @param Header The new value for Header
   * @param Body The new value for Body
   * @param Procctxt The new value for Procctxt
   * @param messages The new value for messages
   */
  public UnifiedPaymentMessage(com.anz.fastpayment.inward.avro.MessageHeader Header, com.anz.fastpayment.inward.avro.MessageBody Body, com.anz.fastpayment.inward.avro.ProcessingContext Procctxt, java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> messages) {
    this.Header = Header;
    this.Body = Body;
    this.Procctxt = Procctxt;
    this.messages = messages;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Header;
    case 1: return Body;
    case 2: return Procctxt;
    case 3: return messages;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Header = (com.anz.fastpayment.inward.avro.MessageHeader)value$; break;
    case 1: Body = (com.anz.fastpayment.inward.avro.MessageBody)value$; break;
    case 2: Procctxt = (com.anz.fastpayment.inward.avro.ProcessingContext)value$; break;
    case 3: messages = (java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Header' field.
   * @return The value of the 'Header' field.
   */
  public com.anz.fastpayment.inward.avro.MessageHeader getHeader() {
    return Header;
  }


  /**
   * Sets the value of the 'Header' field.
   * @param value the value to set.
   */
  public void setHeader(com.anz.fastpayment.inward.avro.MessageHeader value) {
    this.Header = value;
  }

  /**
   * Gets the value of the 'Body' field.
   * @return The value of the 'Body' field.
   */
  public com.anz.fastpayment.inward.avro.MessageBody getBody() {
    return Body;
  }


  /**
   * Sets the value of the 'Body' field.
   * @param value the value to set.
   */
  public void setBody(com.anz.fastpayment.inward.avro.MessageBody value) {
    this.Body = value;
  }

  /**
   * Gets the value of the 'Procctxt' field.
   * @return The value of the 'Procctxt' field.
   */
  public com.anz.fastpayment.inward.avro.ProcessingContext getProcctxt() {
    return Procctxt;
  }


  /**
   * Sets the value of the 'Procctxt' field.
   * @param value the value to set.
   */
  public void setProcctxt(com.anz.fastpayment.inward.avro.ProcessingContext value) {
    this.Procctxt = value;
  }

  /**
   * Gets the value of the 'messages' field.
   * @return The value of the 'messages' field.
   */
  public java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> getMessages() {
    return messages;
  }


  /**
   * Sets the value of the 'messages' field.
   * @param value the value to set.
   */
  public void setMessages(java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> value) {
    this.messages = value;
  }

  /**
   * Creates a new UnifiedPaymentMessage RecordBuilder.
   * @return A new UnifiedPaymentMessage RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder();
  }

  /**
   * Creates a new UnifiedPaymentMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UnifiedPaymentMessage RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder newBuilder(com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder(other);
    }
  }

  /**
   * Creates a new UnifiedPaymentMessage RecordBuilder by copying an existing UnifiedPaymentMessage instance.
   * @param other The existing instance to copy.
   * @return A new UnifiedPaymentMessage RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder newBuilder(com.anz.fastpayment.inward.avro.UnifiedPaymentMessage other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for UnifiedPaymentMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UnifiedPaymentMessage>
    implements org.apache.avro.data.RecordBuilder<UnifiedPaymentMessage> {

    private com.anz.fastpayment.inward.avro.MessageHeader Header;
    private com.anz.fastpayment.inward.avro.MessageHeader.Builder HeaderBuilder;
    private com.anz.fastpayment.inward.avro.MessageBody Body;
    private com.anz.fastpayment.inward.avro.MessageBody.Builder BodyBuilder;
    private com.anz.fastpayment.inward.avro.ProcessingContext Procctxt;
    private com.anz.fastpayment.inward.avro.ProcessingContext.Builder ProcctxtBuilder;
    private java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> messages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Header)) {
        this.Header = data().deepCopy(fields()[0].schema(), other.Header);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasHeaderBuilder()) {
        this.HeaderBuilder = com.anz.fastpayment.inward.avro.MessageHeader.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.Body)) {
        this.Body = data().deepCopy(fields()[1].schema(), other.Body);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasBodyBuilder()) {
        this.BodyBuilder = com.anz.fastpayment.inward.avro.MessageBody.newBuilder(other.getBodyBuilder());
      }
      if (isValidValue(fields()[2], other.Procctxt)) {
        this.Procctxt = data().deepCopy(fields()[2].schema(), other.Procctxt);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasProcctxtBuilder()) {
        this.ProcctxtBuilder = com.anz.fastpayment.inward.avro.ProcessingContext.newBuilder(other.getProcctxtBuilder());
      }
      if (isValidValue(fields()[3], other.messages)) {
        this.messages = data().deepCopy(fields()[3].schema(), other.messages);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing UnifiedPaymentMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.UnifiedPaymentMessage other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.Header)) {
        this.Header = data().deepCopy(fields()[0].schema(), other.Header);
        fieldSetFlags()[0] = true;
      }
      this.HeaderBuilder = null;
      if (isValidValue(fields()[1], other.Body)) {
        this.Body = data().deepCopy(fields()[1].schema(), other.Body);
        fieldSetFlags()[1] = true;
      }
      this.BodyBuilder = null;
      if (isValidValue(fields()[2], other.Procctxt)) {
        this.Procctxt = data().deepCopy(fields()[2].schema(), other.Procctxt);
        fieldSetFlags()[2] = true;
      }
      this.ProcctxtBuilder = null;
      if (isValidValue(fields()[3], other.messages)) {
        this.messages = data().deepCopy(fields()[3].schema(), other.messages);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'Header' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageHeader getHeader() {
      return Header;
    }


    /**
      * Sets the value of the 'Header' field.
      * @param value The value of 'Header'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setHeader(com.anz.fastpayment.inward.avro.MessageHeader value) {
      validate(fields()[0], value);
      this.HeaderBuilder = null;
      this.Header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Header' field has been set.
      * @return True if the 'Header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'Header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageHeader.Builder getHeaderBuilder() {
      if (HeaderBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(com.anz.fastpayment.inward.avro.MessageHeader.newBuilder(Header));
        } else {
          setHeaderBuilder(com.anz.fastpayment.inward.avro.MessageHeader.newBuilder());
        }
      }
      return HeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'Header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setHeaderBuilder(com.anz.fastpayment.inward.avro.MessageHeader.Builder value) {
      clearHeader();
      HeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Header' field has an active Builder instance
     * @return True if the 'Header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return HeaderBuilder != null;
    }

    /**
      * Clears the value of the 'Header' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder clearHeader() {
      Header = null;
      HeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Body' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageBody getBody() {
      return Body;
    }


    /**
      * Sets the value of the 'Body' field.
      * @param value The value of 'Body'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setBody(com.anz.fastpayment.inward.avro.MessageBody value) {
      validate(fields()[1], value);
      this.BodyBuilder = null;
      this.Body = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Body' field has been set.
      * @return True if the 'Body' field has been set, false otherwise.
      */
    public boolean hasBody() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'Body' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageBody.Builder getBodyBuilder() {
      if (BodyBuilder == null) {
        if (hasBody()) {
          setBodyBuilder(com.anz.fastpayment.inward.avro.MessageBody.newBuilder(Body));
        } else {
          setBodyBuilder(com.anz.fastpayment.inward.avro.MessageBody.newBuilder());
        }
      }
      return BodyBuilder;
    }

    /**
     * Sets the Builder instance for the 'Body' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setBodyBuilder(com.anz.fastpayment.inward.avro.MessageBody.Builder value) {
      clearBody();
      BodyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Body' field has an active Builder instance
     * @return True if the 'Body' field has an active Builder instance
     */
    public boolean hasBodyBuilder() {
      return BodyBuilder != null;
    }

    /**
      * Clears the value of the 'Body' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder clearBody() {
      Body = null;
      BodyBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Procctxt' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.ProcessingContext getProcctxt() {
      return Procctxt;
    }


    /**
      * Sets the value of the 'Procctxt' field.
      * @param value The value of 'Procctxt'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setProcctxt(com.anz.fastpayment.inward.avro.ProcessingContext value) {
      validate(fields()[2], value);
      this.ProcctxtBuilder = null;
      this.Procctxt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Procctxt' field has been set.
      * @return True if the 'Procctxt' field has been set, false otherwise.
      */
    public boolean hasProcctxt() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'Procctxt' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.ProcessingContext.Builder getProcctxtBuilder() {
      if (ProcctxtBuilder == null) {
        if (hasProcctxt()) {
          setProcctxtBuilder(com.anz.fastpayment.inward.avro.ProcessingContext.newBuilder(Procctxt));
        } else {
          setProcctxtBuilder(com.anz.fastpayment.inward.avro.ProcessingContext.newBuilder());
        }
      }
      return ProcctxtBuilder;
    }

    /**
     * Sets the Builder instance for the 'Procctxt' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setProcctxtBuilder(com.anz.fastpayment.inward.avro.ProcessingContext.Builder value) {
      clearProcctxt();
      ProcctxtBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Procctxt' field has an active Builder instance
     * @return True if the 'Procctxt' field has an active Builder instance
     */
    public boolean hasProcctxtBuilder() {
      return ProcctxtBuilder != null;
    }

    /**
      * Clears the value of the 'Procctxt' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder clearProcctxt() {
      Procctxt = null;
      ProcctxtBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'messages' field.
      * @return The value.
      */
    public java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> getMessages() {
      return messages;
    }


    /**
      * Sets the value of the 'messages' field.
      * @param value The value of 'messages'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder setMessages(java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> value) {
      validate(fields()[3], value);
      this.messages = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'messages' field has been set.
      * @return True if the 'messages' field has been set, false otherwise.
      */
    public boolean hasMessages() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'messages' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.UnifiedPaymentMessage.Builder clearMessages() {
      messages = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UnifiedPaymentMessage build() {
      try {
        UnifiedPaymentMessage record = new UnifiedPaymentMessage();
        if (HeaderBuilder != null) {
          try {
            record.Header = this.HeaderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Header"));
            throw e;
          }
        } else {
          record.Header = fieldSetFlags()[0] ? this.Header : (com.anz.fastpayment.inward.avro.MessageHeader) defaultValue(fields()[0]);
        }
        if (BodyBuilder != null) {
          try {
            record.Body = this.BodyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Body"));
            throw e;
          }
        } else {
          record.Body = fieldSetFlags()[1] ? this.Body : (com.anz.fastpayment.inward.avro.MessageBody) defaultValue(fields()[1]);
        }
        if (ProcctxtBuilder != null) {
          try {
            record.Procctxt = this.ProcctxtBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Procctxt"));
            throw e;
          }
        } else {
          record.Procctxt = fieldSetFlags()[2] ? this.Procctxt : (com.anz.fastpayment.inward.avro.ProcessingContext) defaultValue(fields()[2]);
        }
        record.messages = fieldSetFlags()[3] ? this.messages : (java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UnifiedPaymentMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<UnifiedPaymentMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UnifiedPaymentMessage>
    READER$ = (org.apache.avro.io.DatumReader<UnifiedPaymentMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.Header == null) {
      throw new IllegalStateException("Header cannot be null for UnifiedPaymentMessage encoding");
    }
    this.Header.customEncode(out);

    if (this.Body == null) {
      throw new IllegalStateException("Body cannot be null for UnifiedPaymentMessage encoding");
    }
    this.Body.customEncode(out);

    if (this.Procctxt == null) {
      throw new IllegalStateException("Procctxt cannot be null for UnifiedPaymentMessage encoding");
    }
    this.Procctxt.customEncode(out);

    if (this.messages == null) {
      throw new IllegalStateException("messages cannot be null for UnifiedPaymentMessage encoding");
    }
    long size0 = this.messages.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.anz.fastpayment.inward.avro.MessageInstruction e0: this.messages) {
      if (e0 == null) {
        throw new IllegalStateException("Array element cannot be null for UnifiedPaymentMessage.messages encoding");
      }
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.Header == null) {
        this.Header = new com.anz.fastpayment.inward.avro.MessageHeader();
      }
      this.Header.customDecode(in);

      if (this.Body == null) {
        this.Body = new com.anz.fastpayment.inward.avro.MessageBody();
      }
      this.Body.customDecode(in);

      if (this.Procctxt == null) {
        this.Procctxt = new com.anz.fastpayment.inward.avro.ProcessingContext();
      }
      this.Procctxt.customDecode(in);

      long size0 = in.readArrayStart();
      java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> a0 = this.messages;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction>((int)size0, SCHEMA$.getField("messages").schema());
        this.messages = a0;
      } else a0.clear();
      SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.anz.fastpayment.inward.avro.MessageInstruction e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.anz.fastpayment.inward.avro.MessageInstruction();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.Header == null) {
            this.Header = new com.anz.fastpayment.inward.avro.MessageHeader();
          }
          this.Header.customDecode(in);
          break;

        case 1:
          if (this.Body == null) {
            this.Body = new com.anz.fastpayment.inward.avro.MessageBody();
          }
          this.Body.customDecode(in);
          break;

        case 2:
          if (this.Procctxt == null) {
            this.Procctxt = new com.anz.fastpayment.inward.avro.ProcessingContext();
          }
          this.Procctxt.customDecode(in);
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<com.anz.fastpayment.inward.avro.MessageInstruction> a0 = this.messages;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction>((int)size0, SCHEMA$.getField("messages").schema());
            this.messages = a0;
          } else a0.clear();
          SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.anz.fastpayment.inward.avro.MessageInstruction>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.anz.fastpayment.inward.avro.MessageInstruction e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.anz.fastpayment.inward.avro.MessageInstruction();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










