/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -369241345870602003L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentDetails\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"PmtCtxt\",\"type\":{\"type\":\"record\",\"name\":\"PaymentContext\",\"fields\":[{\"name\":\"PuId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IntnSrc\",\"type\":{\"type\":\"record\",\"name\":\"IntentionSource\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}},{\"name\":\"ProcCtryCd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdClrgPref\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdMoPCat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PmtCtgry\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment category (e.g., DD for Direct Debit)\"},{\"name\":\"actClrMethod\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"actlMtdOfPmtCtgry\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FIDCIdentifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FICCIdentifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"VAM\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRAccountNo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRAccountSys\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"derivedDRBookCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentDetails> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentDetails> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.anz.fastpayment.inward.avro.PaymentContext PmtCtxt;
  private java.lang.String ProcCtryCd;
  private java.lang.String InstdClrgPref;
  private java.lang.String InstdMoPCat;
  /** Payment category (e.g., DD for Direct Debit) */
  private java.lang.String PmtCtgry;
  private java.lang.String actClrMethod;
  private java.lang.String actlMtdOfPmtCtgry;
  private java.lang.String FIDCIdentifier;
  private java.lang.String FICCIdentifier;
  private java.lang.String VAM;
  private java.lang.String derivedDRAccountNo;
  private java.lang.String derivedDRAccountSys;
  private java.lang.String derivedDRBookCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentDetails() {}

  /**
   * All-args constructor.
   * @param PmtCtxt The new value for PmtCtxt
   * @param ProcCtryCd The new value for ProcCtryCd
   * @param InstdClrgPref The new value for InstdClrgPref
   * @param InstdMoPCat The new value for InstdMoPCat
   * @param PmtCtgry Payment category (e.g., DD for Direct Debit)
   * @param actClrMethod The new value for actClrMethod
   * @param actlMtdOfPmtCtgry The new value for actlMtdOfPmtCtgry
   * @param FIDCIdentifier The new value for FIDCIdentifier
   * @param FICCIdentifier The new value for FICCIdentifier
   * @param VAM The new value for VAM
   * @param derivedDRAccountNo The new value for derivedDRAccountNo
   * @param derivedDRAccountSys The new value for derivedDRAccountSys
   * @param derivedDRBookCode The new value for derivedDRBookCode
   */
  public PaymentDetails(com.anz.fastpayment.inward.avro.PaymentContext PmtCtxt, java.lang.String ProcCtryCd, java.lang.String InstdClrgPref, java.lang.String InstdMoPCat, java.lang.String PmtCtgry, java.lang.String actClrMethod, java.lang.String actlMtdOfPmtCtgry, java.lang.String FIDCIdentifier, java.lang.String FICCIdentifier, java.lang.String VAM, java.lang.String derivedDRAccountNo, java.lang.String derivedDRAccountSys, java.lang.String derivedDRBookCode) {
    this.PmtCtxt = PmtCtxt;
    this.ProcCtryCd = ProcCtryCd;
    this.InstdClrgPref = InstdClrgPref;
    this.InstdMoPCat = InstdMoPCat;
    this.PmtCtgry = PmtCtgry;
    this.actClrMethod = actClrMethod;
    this.actlMtdOfPmtCtgry = actlMtdOfPmtCtgry;
    this.FIDCIdentifier = FIDCIdentifier;
    this.FICCIdentifier = FICCIdentifier;
    this.VAM = VAM;
    this.derivedDRAccountNo = derivedDRAccountNo;
    this.derivedDRAccountSys = derivedDRAccountSys;
    this.derivedDRBookCode = derivedDRBookCode;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PmtCtxt;
    case 1: return ProcCtryCd;
    case 2: return InstdClrgPref;
    case 3: return InstdMoPCat;
    case 4: return PmtCtgry;
    case 5: return actClrMethod;
    case 6: return actlMtdOfPmtCtgry;
    case 7: return FIDCIdentifier;
    case 8: return FICCIdentifier;
    case 9: return VAM;
    case 10: return derivedDRAccountNo;
    case 11: return derivedDRAccountSys;
    case 12: return derivedDRBookCode;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PmtCtxt = (com.anz.fastpayment.inward.avro.PaymentContext)value$; break;
    case 1: ProcCtryCd = value$ != null ? value$.toString() : null; break;
    case 2: InstdClrgPref = value$ != null ? value$.toString() : null; break;
    case 3: InstdMoPCat = value$ != null ? value$.toString() : null; break;
    case 4: PmtCtgry = value$ != null ? value$.toString() : null; break;
    case 5: actClrMethod = value$ != null ? value$.toString() : null; break;
    case 6: actlMtdOfPmtCtgry = value$ != null ? value$.toString() : null; break;
    case 7: FIDCIdentifier = value$ != null ? value$.toString() : null; break;
    case 8: FICCIdentifier = value$ != null ? value$.toString() : null; break;
    case 9: VAM = value$ != null ? value$.toString() : null; break;
    case 10: derivedDRAccountNo = value$ != null ? value$.toString() : null; break;
    case 11: derivedDRAccountSys = value$ != null ? value$.toString() : null; break;
    case 12: derivedDRBookCode = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'PmtCtxt' field.
   * @return The value of the 'PmtCtxt' field.
   */
  public com.anz.fastpayment.inward.avro.PaymentContext getPmtCtxt() {
    return PmtCtxt;
  }


  /**
   * Sets the value of the 'PmtCtxt' field.
   * @param value the value to set.
   */
  public void setPmtCtxt(com.anz.fastpayment.inward.avro.PaymentContext value) {
    this.PmtCtxt = value;
  }

  /**
   * Gets the value of the 'ProcCtryCd' field.
   * @return The value of the 'ProcCtryCd' field.
   */
  public java.lang.String getProcCtryCd() {
    return ProcCtryCd;
  }


  /**
   * Sets the value of the 'ProcCtryCd' field.
   * @param value the value to set.
   */
  public void setProcCtryCd(java.lang.String value) {
    this.ProcCtryCd = value;
  }

  /**
   * Gets the value of the 'InstdClrgPref' field.
   * @return The value of the 'InstdClrgPref' field.
   */
  public java.lang.String getInstdClrgPref() {
    return InstdClrgPref;
  }


  /**
   * Sets the value of the 'InstdClrgPref' field.
   * @param value the value to set.
   */
  public void setInstdClrgPref(java.lang.String value) {
    this.InstdClrgPref = value;
  }

  /**
   * Gets the value of the 'InstdMoPCat' field.
   * @return The value of the 'InstdMoPCat' field.
   */
  public java.lang.String getInstdMoPCat() {
    return InstdMoPCat;
  }


  /**
   * Sets the value of the 'InstdMoPCat' field.
   * @param value the value to set.
   */
  public void setInstdMoPCat(java.lang.String value) {
    this.InstdMoPCat = value;
  }

  /**
   * Gets the value of the 'PmtCtgry' field.
   * @return Payment category (e.g., DD for Direct Debit)
   */
  public java.lang.String getPmtCtgry() {
    return PmtCtgry;
  }


  /**
   * Sets the value of the 'PmtCtgry' field.
   * Payment category (e.g., DD for Direct Debit)
   * @param value the value to set.
   */
  public void setPmtCtgry(java.lang.String value) {
    this.PmtCtgry = value;
  }

  /**
   * Gets the value of the 'actClrMethod' field.
   * @return The value of the 'actClrMethod' field.
   */
  public java.lang.String getActClrMethod() {
    return actClrMethod;
  }


  /**
   * Sets the value of the 'actClrMethod' field.
   * @param value the value to set.
   */
  public void setActClrMethod(java.lang.String value) {
    this.actClrMethod = value;
  }

  /**
   * Gets the value of the 'actlMtdOfPmtCtgry' field.
   * @return The value of the 'actlMtdOfPmtCtgry' field.
   */
  public java.lang.String getActlMtdOfPmtCtgry() {
    return actlMtdOfPmtCtgry;
  }


  /**
   * Sets the value of the 'actlMtdOfPmtCtgry' field.
   * @param value the value to set.
   */
  public void setActlMtdOfPmtCtgry(java.lang.String value) {
    this.actlMtdOfPmtCtgry = value;
  }

  /**
   * Gets the value of the 'FIDCIdentifier' field.
   * @return The value of the 'FIDCIdentifier' field.
   */
  public java.lang.String getFIDCIdentifier() {
    return FIDCIdentifier;
  }


  /**
   * Sets the value of the 'FIDCIdentifier' field.
   * @param value the value to set.
   */
  public void setFIDCIdentifier(java.lang.String value) {
    this.FIDCIdentifier = value;
  }

  /**
   * Gets the value of the 'FICCIdentifier' field.
   * @return The value of the 'FICCIdentifier' field.
   */
  public java.lang.String getFICCIdentifier() {
    return FICCIdentifier;
  }


  /**
   * Sets the value of the 'FICCIdentifier' field.
   * @param value the value to set.
   */
  public void setFICCIdentifier(java.lang.String value) {
    this.FICCIdentifier = value;
  }

  /**
   * Gets the value of the 'VAM' field.
   * @return The value of the 'VAM' field.
   */
  public java.lang.String getVAM() {
    return VAM;
  }


  /**
   * Sets the value of the 'VAM' field.
   * @param value the value to set.
   */
  public void setVAM(java.lang.String value) {
    this.VAM = value;
  }

  /**
   * Gets the value of the 'derivedDRAccountNo' field.
   * @return The value of the 'derivedDRAccountNo' field.
   */
  public java.lang.String getDerivedDRAccountNo() {
    return derivedDRAccountNo;
  }


  /**
   * Sets the value of the 'derivedDRAccountNo' field.
   * @param value the value to set.
   */
  public void setDerivedDRAccountNo(java.lang.String value) {
    this.derivedDRAccountNo = value;
  }

  /**
   * Gets the value of the 'derivedDRAccountSys' field.
   * @return The value of the 'derivedDRAccountSys' field.
   */
  public java.lang.String getDerivedDRAccountSys() {
    return derivedDRAccountSys;
  }


  /**
   * Sets the value of the 'derivedDRAccountSys' field.
   * @param value the value to set.
   */
  public void setDerivedDRAccountSys(java.lang.String value) {
    this.derivedDRAccountSys = value;
  }

  /**
   * Gets the value of the 'derivedDRBookCode' field.
   * @return The value of the 'derivedDRBookCode' field.
   */
  public java.lang.String getDerivedDRBookCode() {
    return derivedDRBookCode;
  }


  /**
   * Sets the value of the 'derivedDRBookCode' field.
   * @param value the value to set.
   */
  public void setDerivedDRBookCode(java.lang.String value) {
    this.derivedDRBookCode = value;
  }

  /**
   * Creates a new PaymentDetails RecordBuilder.
   * @return A new PaymentDetails RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentDetails.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.PaymentDetails.Builder();
  }

  /**
   * Creates a new PaymentDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentDetails RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentDetails.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentDetails.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentDetails.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentDetails.Builder(other);
    }
  }

  /**
   * Creates a new PaymentDetails RecordBuilder by copying an existing PaymentDetails instance.
   * @param other The existing instance to copy.
   * @return A new PaymentDetails RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentDetails.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentDetails other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentDetails.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentDetails>
    implements org.apache.avro.data.RecordBuilder<PaymentDetails> {

    private com.anz.fastpayment.inward.avro.PaymentContext PmtCtxt;
    private com.anz.fastpayment.inward.avro.PaymentContext.Builder PmtCtxtBuilder;
    private java.lang.String ProcCtryCd;
    private java.lang.String InstdClrgPref;
    private java.lang.String InstdMoPCat;
    /** Payment category (e.g., DD for Direct Debit) */
    private java.lang.String PmtCtgry;
    private java.lang.String actClrMethod;
    private java.lang.String actlMtdOfPmtCtgry;
    private java.lang.String FIDCIdentifier;
    private java.lang.String FICCIdentifier;
    private java.lang.String VAM;
    private java.lang.String derivedDRAccountNo;
    private java.lang.String derivedDRAccountSys;
    private java.lang.String derivedDRBookCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PmtCtxt)) {
        this.PmtCtxt = data().deepCopy(fields()[0].schema(), other.PmtCtxt);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasPmtCtxtBuilder()) {
        this.PmtCtxtBuilder = com.anz.fastpayment.inward.avro.PaymentContext.newBuilder(other.getPmtCtxtBuilder());
      }
      if (isValidValue(fields()[1], other.ProcCtryCd)) {
        this.ProcCtryCd = data().deepCopy(fields()[1].schema(), other.ProcCtryCd);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.InstdClrgPref)) {
        this.InstdClrgPref = data().deepCopy(fields()[2].schema(), other.InstdClrgPref);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.InstdMoPCat)) {
        this.InstdMoPCat = data().deepCopy(fields()[3].schema(), other.InstdMoPCat);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.PmtCtgry)) {
        this.PmtCtgry = data().deepCopy(fields()[4].schema(), other.PmtCtgry);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.actClrMethod)) {
        this.actClrMethod = data().deepCopy(fields()[5].schema(), other.actClrMethod);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.actlMtdOfPmtCtgry)) {
        this.actlMtdOfPmtCtgry = data().deepCopy(fields()[6].schema(), other.actlMtdOfPmtCtgry);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.FIDCIdentifier)) {
        this.FIDCIdentifier = data().deepCopy(fields()[7].schema(), other.FIDCIdentifier);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.FICCIdentifier)) {
        this.FICCIdentifier = data().deepCopy(fields()[8].schema(), other.FICCIdentifier);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.VAM)) {
        this.VAM = data().deepCopy(fields()[9].schema(), other.VAM);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.derivedDRAccountNo)) {
        this.derivedDRAccountNo = data().deepCopy(fields()[10].schema(), other.derivedDRAccountNo);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.derivedDRAccountSys)) {
        this.derivedDRAccountSys = data().deepCopy(fields()[11].schema(), other.derivedDRAccountSys);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.derivedDRBookCode)) {
        this.derivedDRBookCode = data().deepCopy(fields()[12].schema(), other.derivedDRBookCode);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentDetails other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.PmtCtxt)) {
        this.PmtCtxt = data().deepCopy(fields()[0].schema(), other.PmtCtxt);
        fieldSetFlags()[0] = true;
      }
      this.PmtCtxtBuilder = null;
      if (isValidValue(fields()[1], other.ProcCtryCd)) {
        this.ProcCtryCd = data().deepCopy(fields()[1].schema(), other.ProcCtryCd);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.InstdClrgPref)) {
        this.InstdClrgPref = data().deepCopy(fields()[2].schema(), other.InstdClrgPref);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.InstdMoPCat)) {
        this.InstdMoPCat = data().deepCopy(fields()[3].schema(), other.InstdMoPCat);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PmtCtgry)) {
        this.PmtCtgry = data().deepCopy(fields()[4].schema(), other.PmtCtgry);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.actClrMethod)) {
        this.actClrMethod = data().deepCopy(fields()[5].schema(), other.actClrMethod);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.actlMtdOfPmtCtgry)) {
        this.actlMtdOfPmtCtgry = data().deepCopy(fields()[6].schema(), other.actlMtdOfPmtCtgry);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.FIDCIdentifier)) {
        this.FIDCIdentifier = data().deepCopy(fields()[7].schema(), other.FIDCIdentifier);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.FICCIdentifier)) {
        this.FICCIdentifier = data().deepCopy(fields()[8].schema(), other.FICCIdentifier);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.VAM)) {
        this.VAM = data().deepCopy(fields()[9].schema(), other.VAM);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.derivedDRAccountNo)) {
        this.derivedDRAccountNo = data().deepCopy(fields()[10].schema(), other.derivedDRAccountNo);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.derivedDRAccountSys)) {
        this.derivedDRAccountSys = data().deepCopy(fields()[11].schema(), other.derivedDRAccountSys);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.derivedDRBookCode)) {
        this.derivedDRBookCode = data().deepCopy(fields()[12].schema(), other.derivedDRBookCode);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'PmtCtxt' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.PaymentContext getPmtCtxt() {
      return PmtCtxt;
    }


    /**
      * Sets the value of the 'PmtCtxt' field.
      * @param value The value of 'PmtCtxt'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setPmtCtxt(com.anz.fastpayment.inward.avro.PaymentContext value) {
      validate(fields()[0], value);
      this.PmtCtxtBuilder = null;
      this.PmtCtxt = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'PmtCtxt' field has been set.
      * @return True if the 'PmtCtxt' field has been set, false otherwise.
      */
    public boolean hasPmtCtxt() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'PmtCtxt' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.PaymentContext.Builder getPmtCtxtBuilder() {
      if (PmtCtxtBuilder == null) {
        if (hasPmtCtxt()) {
          setPmtCtxtBuilder(com.anz.fastpayment.inward.avro.PaymentContext.newBuilder(PmtCtxt));
        } else {
          setPmtCtxtBuilder(com.anz.fastpayment.inward.avro.PaymentContext.newBuilder());
        }
      }
      return PmtCtxtBuilder;
    }

    /**
     * Sets the Builder instance for the 'PmtCtxt' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setPmtCtxtBuilder(com.anz.fastpayment.inward.avro.PaymentContext.Builder value) {
      clearPmtCtxt();
      PmtCtxtBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'PmtCtxt' field has an active Builder instance
     * @return True if the 'PmtCtxt' field has an active Builder instance
     */
    public boolean hasPmtCtxtBuilder() {
      return PmtCtxtBuilder != null;
    }

    /**
      * Clears the value of the 'PmtCtxt' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearPmtCtxt() {
      PmtCtxt = null;
      PmtCtxtBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ProcCtryCd' field.
      * @return The value.
      */
    public java.lang.String getProcCtryCd() {
      return ProcCtryCd;
    }


    /**
      * Sets the value of the 'ProcCtryCd' field.
      * @param value The value of 'ProcCtryCd'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setProcCtryCd(java.lang.String value) {
      validate(fields()[1], value);
      this.ProcCtryCd = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ProcCtryCd' field has been set.
      * @return True if the 'ProcCtryCd' field has been set, false otherwise.
      */
    public boolean hasProcCtryCd() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ProcCtryCd' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearProcCtryCd() {
      ProcCtryCd = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstdClrgPref' field.
      * @return The value.
      */
    public java.lang.String getInstdClrgPref() {
      return InstdClrgPref;
    }


    /**
      * Sets the value of the 'InstdClrgPref' field.
      * @param value The value of 'InstdClrgPref'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setInstdClrgPref(java.lang.String value) {
      validate(fields()[2], value);
      this.InstdClrgPref = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'InstdClrgPref' field has been set.
      * @return True if the 'InstdClrgPref' field has been set, false otherwise.
      */
    public boolean hasInstdClrgPref() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'InstdClrgPref' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearInstdClrgPref() {
      InstdClrgPref = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstdMoPCat' field.
      * @return The value.
      */
    public java.lang.String getInstdMoPCat() {
      return InstdMoPCat;
    }


    /**
      * Sets the value of the 'InstdMoPCat' field.
      * @param value The value of 'InstdMoPCat'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setInstdMoPCat(java.lang.String value) {
      validate(fields()[3], value);
      this.InstdMoPCat = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'InstdMoPCat' field has been set.
      * @return True if the 'InstdMoPCat' field has been set, false otherwise.
      */
    public boolean hasInstdMoPCat() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'InstdMoPCat' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearInstdMoPCat() {
      InstdMoPCat = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'PmtCtgry' field.
      * Payment category (e.g., DD for Direct Debit)
      * @return The value.
      */
    public java.lang.String getPmtCtgry() {
      return PmtCtgry;
    }


    /**
      * Sets the value of the 'PmtCtgry' field.
      * Payment category (e.g., DD for Direct Debit)
      * @param value The value of 'PmtCtgry'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setPmtCtgry(java.lang.String value) {
      validate(fields()[4], value);
      this.PmtCtgry = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'PmtCtgry' field has been set.
      * Payment category (e.g., DD for Direct Debit)
      * @return True if the 'PmtCtgry' field has been set, false otherwise.
      */
    public boolean hasPmtCtgry() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'PmtCtgry' field.
      * Payment category (e.g., DD for Direct Debit)
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearPmtCtgry() {
      PmtCtgry = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'actClrMethod' field.
      * @return The value.
      */
    public java.lang.String getActClrMethod() {
      return actClrMethod;
    }


    /**
      * Sets the value of the 'actClrMethod' field.
      * @param value The value of 'actClrMethod'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setActClrMethod(java.lang.String value) {
      validate(fields()[5], value);
      this.actClrMethod = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'actClrMethod' field has been set.
      * @return True if the 'actClrMethod' field has been set, false otherwise.
      */
    public boolean hasActClrMethod() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'actClrMethod' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearActClrMethod() {
      actClrMethod = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'actlMtdOfPmtCtgry' field.
      * @return The value.
      */
    public java.lang.String getActlMtdOfPmtCtgry() {
      return actlMtdOfPmtCtgry;
    }


    /**
      * Sets the value of the 'actlMtdOfPmtCtgry' field.
      * @param value The value of 'actlMtdOfPmtCtgry'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setActlMtdOfPmtCtgry(java.lang.String value) {
      validate(fields()[6], value);
      this.actlMtdOfPmtCtgry = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'actlMtdOfPmtCtgry' field has been set.
      * @return True if the 'actlMtdOfPmtCtgry' field has been set, false otherwise.
      */
    public boolean hasActlMtdOfPmtCtgry() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'actlMtdOfPmtCtgry' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearActlMtdOfPmtCtgry() {
      actlMtdOfPmtCtgry = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'FIDCIdentifier' field.
      * @return The value.
      */
    public java.lang.String getFIDCIdentifier() {
      return FIDCIdentifier;
    }


    /**
      * Sets the value of the 'FIDCIdentifier' field.
      * @param value The value of 'FIDCIdentifier'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setFIDCIdentifier(java.lang.String value) {
      validate(fields()[7], value);
      this.FIDCIdentifier = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'FIDCIdentifier' field has been set.
      * @return True if the 'FIDCIdentifier' field has been set, false otherwise.
      */
    public boolean hasFIDCIdentifier() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'FIDCIdentifier' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearFIDCIdentifier() {
      FIDCIdentifier = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'FICCIdentifier' field.
      * @return The value.
      */
    public java.lang.String getFICCIdentifier() {
      return FICCIdentifier;
    }


    /**
      * Sets the value of the 'FICCIdentifier' field.
      * @param value The value of 'FICCIdentifier'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setFICCIdentifier(java.lang.String value) {
      validate(fields()[8], value);
      this.FICCIdentifier = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'FICCIdentifier' field has been set.
      * @return True if the 'FICCIdentifier' field has been set, false otherwise.
      */
    public boolean hasFICCIdentifier() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'FICCIdentifier' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearFICCIdentifier() {
      FICCIdentifier = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'VAM' field.
      * @return The value.
      */
    public java.lang.String getVAM() {
      return VAM;
    }


    /**
      * Sets the value of the 'VAM' field.
      * @param value The value of 'VAM'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setVAM(java.lang.String value) {
      validate(fields()[9], value);
      this.VAM = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'VAM' field has been set.
      * @return True if the 'VAM' field has been set, false otherwise.
      */
    public boolean hasVAM() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'VAM' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearVAM() {
      VAM = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'derivedDRAccountNo' field.
      * @return The value.
      */
    public java.lang.String getDerivedDRAccountNo() {
      return derivedDRAccountNo;
    }


    /**
      * Sets the value of the 'derivedDRAccountNo' field.
      * @param value The value of 'derivedDRAccountNo'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setDerivedDRAccountNo(java.lang.String value) {
      validate(fields()[10], value);
      this.derivedDRAccountNo = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'derivedDRAccountNo' field has been set.
      * @return True if the 'derivedDRAccountNo' field has been set, false otherwise.
      */
    public boolean hasDerivedDRAccountNo() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'derivedDRAccountNo' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearDerivedDRAccountNo() {
      derivedDRAccountNo = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'derivedDRAccountSys' field.
      * @return The value.
      */
    public java.lang.String getDerivedDRAccountSys() {
      return derivedDRAccountSys;
    }


    /**
      * Sets the value of the 'derivedDRAccountSys' field.
      * @param value The value of 'derivedDRAccountSys'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setDerivedDRAccountSys(java.lang.String value) {
      validate(fields()[11], value);
      this.derivedDRAccountSys = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'derivedDRAccountSys' field has been set.
      * @return True if the 'derivedDRAccountSys' field has been set, false otherwise.
      */
    public boolean hasDerivedDRAccountSys() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'derivedDRAccountSys' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearDerivedDRAccountSys() {
      derivedDRAccountSys = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'derivedDRBookCode' field.
      * @return The value.
      */
    public java.lang.String getDerivedDRBookCode() {
      return derivedDRBookCode;
    }


    /**
      * Sets the value of the 'derivedDRBookCode' field.
      * @param value The value of 'derivedDRBookCode'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder setDerivedDRBookCode(java.lang.String value) {
      validate(fields()[12], value);
      this.derivedDRBookCode = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'derivedDRBookCode' field has been set.
      * @return True if the 'derivedDRBookCode' field has been set, false otherwise.
      */
    public boolean hasDerivedDRBookCode() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'derivedDRBookCode' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentDetails.Builder clearDerivedDRBookCode() {
      derivedDRBookCode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentDetails build() {
      try {
        PaymentDetails record = new PaymentDetails();
        if (PmtCtxtBuilder != null) {
          try {
            record.PmtCtxt = this.PmtCtxtBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("PmtCtxt"));
            throw e;
          }
        } else {
          record.PmtCtxt = fieldSetFlags()[0] ? this.PmtCtxt : (com.anz.fastpayment.inward.avro.PaymentContext) defaultValue(fields()[0]);
        }
        record.ProcCtryCd = fieldSetFlags()[1] ? this.ProcCtryCd : (java.lang.String) defaultValue(fields()[1]);
        record.InstdClrgPref = fieldSetFlags()[2] ? this.InstdClrgPref : (java.lang.String) defaultValue(fields()[2]);
        record.InstdMoPCat = fieldSetFlags()[3] ? this.InstdMoPCat : (java.lang.String) defaultValue(fields()[3]);
        record.PmtCtgry = fieldSetFlags()[4] ? this.PmtCtgry : (java.lang.String) defaultValue(fields()[4]);
        record.actClrMethod = fieldSetFlags()[5] ? this.actClrMethod : (java.lang.String) defaultValue(fields()[5]);
        record.actlMtdOfPmtCtgry = fieldSetFlags()[6] ? this.actlMtdOfPmtCtgry : (java.lang.String) defaultValue(fields()[6]);
        record.FIDCIdentifier = fieldSetFlags()[7] ? this.FIDCIdentifier : (java.lang.String) defaultValue(fields()[7]);
        record.FICCIdentifier = fieldSetFlags()[8] ? this.FICCIdentifier : (java.lang.String) defaultValue(fields()[8]);
        record.VAM = fieldSetFlags()[9] ? this.VAM : (java.lang.String) defaultValue(fields()[9]);
        record.derivedDRAccountNo = fieldSetFlags()[10] ? this.derivedDRAccountNo : (java.lang.String) defaultValue(fields()[10]);
        record.derivedDRAccountSys = fieldSetFlags()[11] ? this.derivedDRAccountSys : (java.lang.String) defaultValue(fields()[11]);
        record.derivedDRBookCode = fieldSetFlags()[12] ? this.derivedDRBookCode : (java.lang.String) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentDetails>
    READER$ = (org.apache.avro.io.DatumReader<PaymentDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.PmtCtxt == null) {
      throw new IllegalStateException("PmtCtxt cannot be null for PaymentDetails encoding");
    }
    this.PmtCtxt.customEncode(out);

    if (this.ProcCtryCd == null) {
      throw new IllegalStateException("ProcCtryCd cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.ProcCtryCd);

    if (this.InstdClrgPref == null) {
      throw new IllegalStateException("InstdClrgPref cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.InstdClrgPref);

    if (this.InstdMoPCat == null) {
      throw new IllegalStateException("InstdMoPCat cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.InstdMoPCat);

    if (this.PmtCtgry == null) {
      throw new IllegalStateException("PmtCtgry cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.PmtCtgry);

    if (this.actClrMethod == null) {
      throw new IllegalStateException("actClrMethod cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.actClrMethod);

    if (this.actlMtdOfPmtCtgry == null) {
      throw new IllegalStateException("actlMtdOfPmtCtgry cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.actlMtdOfPmtCtgry);

    if (this.FIDCIdentifier == null) {
      throw new IllegalStateException("FIDCIdentifier cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.FIDCIdentifier);

    if (this.FICCIdentifier == null) {
      throw new IllegalStateException("FICCIdentifier cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.FICCIdentifier);

    if (this.VAM == null) {
      throw new IllegalStateException("VAM cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.VAM);

    if (this.derivedDRAccountNo == null) {
      throw new IllegalStateException("derivedDRAccountNo cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.derivedDRAccountNo);

    if (this.derivedDRAccountSys == null) {
      throw new IllegalStateException("derivedDRAccountSys cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.derivedDRAccountSys);

    if (this.derivedDRBookCode == null) {
      throw new IllegalStateException("derivedDRBookCode cannot be null for PaymentDetails encoding");
    }
    out.writeString(this.derivedDRBookCode);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.PmtCtxt == null) {
        this.PmtCtxt = new com.anz.fastpayment.inward.avro.PaymentContext();
      }
      this.PmtCtxt.customDecode(in);

      this.ProcCtryCd = in.readString();

      this.InstdClrgPref = in.readString();

      this.InstdMoPCat = in.readString();

      this.PmtCtgry = in.readString();

      this.actClrMethod = in.readString();

      this.actlMtdOfPmtCtgry = in.readString();

      this.FIDCIdentifier = in.readString();

      this.FICCIdentifier = in.readString();

      this.VAM = in.readString();

      this.derivedDRAccountNo = in.readString();

      this.derivedDRAccountSys = in.readString();

      this.derivedDRBookCode = in.readString();

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.PmtCtxt == null) {
            this.PmtCtxt = new com.anz.fastpayment.inward.avro.PaymentContext();
          }
          this.PmtCtxt.customDecode(in);
          break;

        case 1:
          this.ProcCtryCd = in.readString();
          break;

        case 2:
          this.InstdClrgPref = in.readString();
          break;

        case 3:
          this.InstdMoPCat = in.readString();
          break;

        case 4:
          this.PmtCtgry = in.readString();
          break;

        case 5:
          this.actClrMethod = in.readString();
          break;

        case 6:
          this.actlMtdOfPmtCtgry = in.readString();
          break;

        case 7:
          this.FIDCIdentifier = in.readString();
          break;

        case 8:
          this.FICCIdentifier = in.readString();
          break;

        case 9:
          this.VAM = in.readString();
          break;

        case 10:
          this.derivedDRAccountNo = in.readString();
          break;

        case 11:
          this.derivedDRAccountSys = in.readString();
          break;

        case 12:
          this.derivedDRBookCode = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










