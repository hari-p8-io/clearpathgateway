/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentId extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1946612328024980080L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentId\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"InstrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TxId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"EndToEndId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClrSysRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentId> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentId> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentId> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentId> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentId> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentId to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentId from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentId instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentId fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String InstrId;
  private java.lang.String TxId;
  private java.lang.String EndToEndId;
  private java.lang.String ClrSysRef;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentId() {}

  /**
   * All-args constructor.
   * @param InstrId The new value for InstrId
   * @param TxId The new value for TxId
   * @param EndToEndId The new value for EndToEndId
   * @param ClrSysRef The new value for ClrSysRef
   */
  public PaymentId(java.lang.String InstrId, java.lang.String TxId, java.lang.String EndToEndId, java.lang.String ClrSysRef) {
    this.InstrId = InstrId;
    this.TxId = TxId;
    this.EndToEndId = EndToEndId;
    this.ClrSysRef = ClrSysRef;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return InstrId;
    case 1: return TxId;
    case 2: return EndToEndId;
    case 3: return ClrSysRef;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: InstrId = value$ != null ? value$.toString() : null; break;
    case 1: TxId = value$ != null ? value$.toString() : null; break;
    case 2: EndToEndId = value$ != null ? value$.toString() : null; break;
    case 3: ClrSysRef = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'InstrId' field.
   * @return The value of the 'InstrId' field.
   */
  public java.lang.String getInstrId() {
    return InstrId;
  }


  /**
   * Sets the value of the 'InstrId' field.
   * @param value the value to set.
   */
  public void setInstrId(java.lang.String value) {
    this.InstrId = value;
  }

  /**
   * Gets the value of the 'TxId' field.
   * @return The value of the 'TxId' field.
   */
  public java.lang.String getTxId() {
    return TxId;
  }


  /**
   * Sets the value of the 'TxId' field.
   * @param value the value to set.
   */
  public void setTxId(java.lang.String value) {
    this.TxId = value;
  }

  /**
   * Gets the value of the 'EndToEndId' field.
   * @return The value of the 'EndToEndId' field.
   */
  public java.lang.String getEndToEndId() {
    return EndToEndId;
  }


  /**
   * Sets the value of the 'EndToEndId' field.
   * @param value the value to set.
   */
  public void setEndToEndId(java.lang.String value) {
    this.EndToEndId = value;
  }

  /**
   * Gets the value of the 'ClrSysRef' field.
   * @return The value of the 'ClrSysRef' field.
   */
  public java.lang.String getClrSysRef() {
    return ClrSysRef;
  }


  /**
   * Sets the value of the 'ClrSysRef' field.
   * @param value the value to set.
   */
  public void setClrSysRef(java.lang.String value) {
    this.ClrSysRef = value;
  }

  /**
   * Creates a new PaymentId RecordBuilder.
   * @return A new PaymentId RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentId.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.PaymentId.Builder();
  }

  /**
   * Creates a new PaymentId RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentId RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentId.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentId.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentId.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentId.Builder(other);
    }
  }

  /**
   * Creates a new PaymentId RecordBuilder by copying an existing PaymentId instance.
   * @param other The existing instance to copy.
   * @return A new PaymentId RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentId.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentId other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentId.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentId.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentId instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentId>
    implements org.apache.avro.data.RecordBuilder<PaymentId> {

    private java.lang.String InstrId;
    private java.lang.String TxId;
    private java.lang.String EndToEndId;
    private java.lang.String ClrSysRef;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentId.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InstrId)) {
        this.InstrId = data().deepCopy(fields()[0].schema(), other.InstrId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.TxId)) {
        this.TxId = data().deepCopy(fields()[1].schema(), other.TxId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.EndToEndId)) {
        this.EndToEndId = data().deepCopy(fields()[2].schema(), other.EndToEndId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.ClrSysRef)) {
        this.ClrSysRef = data().deepCopy(fields()[3].schema(), other.ClrSysRef);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentId instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentId other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.InstrId)) {
        this.InstrId = data().deepCopy(fields()[0].schema(), other.InstrId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.TxId)) {
        this.TxId = data().deepCopy(fields()[1].schema(), other.TxId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.EndToEndId)) {
        this.EndToEndId = data().deepCopy(fields()[2].schema(), other.EndToEndId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ClrSysRef)) {
        this.ClrSysRef = data().deepCopy(fields()[3].schema(), other.ClrSysRef);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'InstrId' field.
      * @return The value.
      */
    public java.lang.String getInstrId() {
      return InstrId;
    }


    /**
      * Sets the value of the 'InstrId' field.
      * @param value The value of 'InstrId'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder setInstrId(java.lang.String value) {
      validate(fields()[0], value);
      this.InstrId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InstrId' field has been set.
      * @return True if the 'InstrId' field has been set, false otherwise.
      */
    public boolean hasInstrId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'InstrId' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder clearInstrId() {
      InstrId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'TxId' field.
      * @return The value.
      */
    public java.lang.String getTxId() {
      return TxId;
    }


    /**
      * Sets the value of the 'TxId' field.
      * @param value The value of 'TxId'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder setTxId(java.lang.String value) {
      validate(fields()[1], value);
      this.TxId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'TxId' field has been set.
      * @return True if the 'TxId' field has been set, false otherwise.
      */
    public boolean hasTxId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'TxId' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder clearTxId() {
      TxId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'EndToEndId' field.
      * @return The value.
      */
    public java.lang.String getEndToEndId() {
      return EndToEndId;
    }


    /**
      * Sets the value of the 'EndToEndId' field.
      * @param value The value of 'EndToEndId'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder setEndToEndId(java.lang.String value) {
      validate(fields()[2], value);
      this.EndToEndId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'EndToEndId' field has been set.
      * @return True if the 'EndToEndId' field has been set, false otherwise.
      */
    public boolean hasEndToEndId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'EndToEndId' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder clearEndToEndId() {
      EndToEndId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClrSysRef' field.
      * @return The value.
      */
    public java.lang.String getClrSysRef() {
      return ClrSysRef;
    }


    /**
      * Sets the value of the 'ClrSysRef' field.
      * @param value The value of 'ClrSysRef'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder setClrSysRef(java.lang.String value) {
      validate(fields()[3], value);
      this.ClrSysRef = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ClrSysRef' field has been set.
      * @return True if the 'ClrSysRef' field has been set, false otherwise.
      */
    public boolean hasClrSysRef() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ClrSysRef' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentId.Builder clearClrSysRef() {
      ClrSysRef = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentId build() {
      try {
        PaymentId record = new PaymentId();
        record.InstrId = fieldSetFlags()[0] ? this.InstrId : (java.lang.String) defaultValue(fields()[0]);
        record.TxId = fieldSetFlags()[1] ? this.TxId : (java.lang.String) defaultValue(fields()[1]);
        record.EndToEndId = fieldSetFlags()[2] ? this.EndToEndId : (java.lang.String) defaultValue(fields()[2]);
        record.ClrSysRef = fieldSetFlags()[3] ? this.ClrSysRef : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentId>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentId>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentId>
    READER$ = (org.apache.avro.io.DatumReader<PaymentId>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.InstrId == null) {
      throw new IllegalStateException("InstrId cannot be null for PaymentId encoding");
    }
    out.writeString(this.InstrId);

    if (this.TxId == null) {
      throw new IllegalStateException("TxId cannot be null for PaymentId encoding");
    }
    out.writeString(this.TxId);

    if (this.EndToEndId == null) {
      throw new IllegalStateException("EndToEndId cannot be null for PaymentId encoding");
    }
    out.writeString(this.EndToEndId);

    if (this.ClrSysRef == null) {
      throw new IllegalStateException("ClrSysRef cannot be null for PaymentId encoding");
    }
    out.writeString(this.ClrSysRef);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.InstrId = in.readString();

      this.TxId = in.readString();

      this.EndToEndId = in.readString();

      this.ClrSysRef = in.readString();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.InstrId = in.readString();
          break;

        case 1:
          this.TxId = in.readString();
          break;

        case 2:
          this.EndToEndId = in.readString();
          break;

        case 3:
          this.ClrSysRef = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










