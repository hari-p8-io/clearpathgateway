/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Instruction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5445553870533108005L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Instruction\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"MsgDef\",\"type\":{\"type\":\"record\",\"name\":\"MessageDefinition\",\"fields\":[{\"name\":\"MsgType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Schema\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"MsgCtxt\",\"type\":{\"type\":\"record\",\"name\":\"MessageContext\",\"fields\":[{\"name\":\"OrigMsgTyp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdClrgPref\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstdMoPCat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Site\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"BaseAmt\",\"type\":[\"null\",\"double\"],\"doc\":\"Base amount (legacy field - use BaseAmtMinor for precision)\",\"default\":null},{\"name\":\"BaseAmtMinor\",\"type\":[\"null\",\"long\"],\"doc\":\"Base amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":null},{\"name\":\"BaseCcy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SenderBIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ProcCtryCd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Department\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"MsgId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Direction\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"MsgAddRq\",\"type\":{\"type\":\"record\",\"name\":\"MessageAddRequest\",\"fields\":[{\"name\":\"OrigMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"MsgDtls\",\"type\":{\"type\":\"record\",\"name\":\"MessageDetails\",\"fields\":[{\"name\":\"DrctDbtTxInf\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransactionInfo\",\"fields\":[{\"name\":\"PmtId\",\"type\":{\"type\":\"record\",\"name\":\"PaymentId\",\"fields\":[{\"name\":\"InstrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TxId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"EndToEndId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClrSysRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"IntrBkSttlmAmt\",\"type\":\"double\",\"doc\":\"Inter-bank settlement amount (legacy field - use IntrBkSttlmAmtMinor for precision)\"},{\"name\":\"IntrBkSttlmAmtMinor\",\"type\":\"long\",\"doc\":\"Inter-bank settlement amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":0},{\"name\":\"IntrBkSttlmCCY\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IntrBkSttlmDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstgAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructingAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"InstdAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructedAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Dbtr\",\"type\":{\"type\":\"record\",\"name\":\"Debtor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DbtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"DbtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Cdtr\",\"type\":{\"type\":\"record\",\"name\":\"Creditor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"Purp\",\"type\":{\"type\":\"record\",\"name\":\"Purpose\",\"fields\":[{\"name\":\"Cd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"RmtInf\",\"type\":{\"type\":\"record\",\"name\":\"RemittanceInformation\",\"fields\":[{\"name\":\"Ustrd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DrctDbtTx\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransaction\",\"fields\":[{\"name\":\"MndtRltdInf\",\"type\":{\"type\":\"record\",\"name\":\"MandateRelatedInformation\",\"fields\":[{\"name\":\"MndtId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]}}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Instruction> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Instruction> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Instruction> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Instruction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Instruction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Instruction to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Instruction from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Instruction instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Instruction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.anz.fastpayment.inward.avro.MessageDefinition MsgDef;
  private com.anz.fastpayment.inward.avro.MessageContext MsgCtxt;
  private com.anz.fastpayment.inward.avro.MessageAddRequest MsgAddRq;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Instruction() {}

  /**
   * All-args constructor.
   * @param MsgDef The new value for MsgDef
   * @param MsgCtxt The new value for MsgCtxt
   * @param MsgAddRq The new value for MsgAddRq
   */
  public Instruction(com.anz.fastpayment.inward.avro.MessageDefinition MsgDef, com.anz.fastpayment.inward.avro.MessageContext MsgCtxt, com.anz.fastpayment.inward.avro.MessageAddRequest MsgAddRq) {
    this.MsgDef = MsgDef;
    this.MsgCtxt = MsgCtxt;
    this.MsgAddRq = MsgAddRq;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return MsgDef;
    case 1: return MsgCtxt;
    case 2: return MsgAddRq;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: MsgDef = (com.anz.fastpayment.inward.avro.MessageDefinition)value$; break;
    case 1: MsgCtxt = (com.anz.fastpayment.inward.avro.MessageContext)value$; break;
    case 2: MsgAddRq = (com.anz.fastpayment.inward.avro.MessageAddRequest)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'MsgDef' field.
   * @return The value of the 'MsgDef' field.
   */
  public com.anz.fastpayment.inward.avro.MessageDefinition getMsgDef() {
    return MsgDef;
  }


  /**
   * Sets the value of the 'MsgDef' field.
   * @param value the value to set.
   */
  public void setMsgDef(com.anz.fastpayment.inward.avro.MessageDefinition value) {
    this.MsgDef = value;
  }

  /**
   * Gets the value of the 'MsgCtxt' field.
   * @return The value of the 'MsgCtxt' field.
   */
  public com.anz.fastpayment.inward.avro.MessageContext getMsgCtxt() {
    return MsgCtxt;
  }


  /**
   * Sets the value of the 'MsgCtxt' field.
   * @param value the value to set.
   */
  public void setMsgCtxt(com.anz.fastpayment.inward.avro.MessageContext value) {
    this.MsgCtxt = value;
  }

  /**
   * Gets the value of the 'MsgAddRq' field.
   * @return The value of the 'MsgAddRq' field.
   */
  public com.anz.fastpayment.inward.avro.MessageAddRequest getMsgAddRq() {
    return MsgAddRq;
  }


  /**
   * Sets the value of the 'MsgAddRq' field.
   * @param value the value to set.
   */
  public void setMsgAddRq(com.anz.fastpayment.inward.avro.MessageAddRequest value) {
    this.MsgAddRq = value;
  }

  /**
   * Creates a new Instruction RecordBuilder.
   * @return A new Instruction RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.Instruction.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.Instruction.Builder();
  }

  /**
   * Creates a new Instruction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Instruction RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.Instruction.Builder newBuilder(com.anz.fastpayment.inward.avro.Instruction.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.Instruction.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.Instruction.Builder(other);
    }
  }

  /**
   * Creates a new Instruction RecordBuilder by copying an existing Instruction instance.
   * @param other The existing instance to copy.
   * @return A new Instruction RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.Instruction.Builder newBuilder(com.anz.fastpayment.inward.avro.Instruction other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.Instruction.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.Instruction.Builder(other);
    }
  }

  /**
   * RecordBuilder for Instruction instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Instruction>
    implements org.apache.avro.data.RecordBuilder<Instruction> {

    private com.anz.fastpayment.inward.avro.MessageDefinition MsgDef;
    private com.anz.fastpayment.inward.avro.MessageDefinition.Builder MsgDefBuilder;
    private com.anz.fastpayment.inward.avro.MessageContext MsgCtxt;
    private com.anz.fastpayment.inward.avro.MessageContext.Builder MsgCtxtBuilder;
    private com.anz.fastpayment.inward.avro.MessageAddRequest MsgAddRq;
    private com.anz.fastpayment.inward.avro.MessageAddRequest.Builder MsgAddRqBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.Instruction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.MsgDef)) {
        this.MsgDef = data().deepCopy(fields()[0].schema(), other.MsgDef);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasMsgDefBuilder()) {
        this.MsgDefBuilder = com.anz.fastpayment.inward.avro.MessageDefinition.newBuilder(other.getMsgDefBuilder());
      }
      if (isValidValue(fields()[1], other.MsgCtxt)) {
        this.MsgCtxt = data().deepCopy(fields()[1].schema(), other.MsgCtxt);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasMsgCtxtBuilder()) {
        this.MsgCtxtBuilder = com.anz.fastpayment.inward.avro.MessageContext.newBuilder(other.getMsgCtxtBuilder());
      }
      if (isValidValue(fields()[2], other.MsgAddRq)) {
        this.MsgAddRq = data().deepCopy(fields()[2].schema(), other.MsgAddRq);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasMsgAddRqBuilder()) {
        this.MsgAddRqBuilder = com.anz.fastpayment.inward.avro.MessageAddRequest.newBuilder(other.getMsgAddRqBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Instruction instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.Instruction other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.MsgDef)) {
        this.MsgDef = data().deepCopy(fields()[0].schema(), other.MsgDef);
        fieldSetFlags()[0] = true;
      }
      this.MsgDefBuilder = null;
      if (isValidValue(fields()[1], other.MsgCtxt)) {
        this.MsgCtxt = data().deepCopy(fields()[1].schema(), other.MsgCtxt);
        fieldSetFlags()[1] = true;
      }
      this.MsgCtxtBuilder = null;
      if (isValidValue(fields()[2], other.MsgAddRq)) {
        this.MsgAddRq = data().deepCopy(fields()[2].schema(), other.MsgAddRq);
        fieldSetFlags()[2] = true;
      }
      this.MsgAddRqBuilder = null;
    }

    /**
      * Gets the value of the 'MsgDef' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageDefinition getMsgDef() {
      return MsgDef;
    }


    /**
      * Sets the value of the 'MsgDef' field.
      * @param value The value of 'MsgDef'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgDef(com.anz.fastpayment.inward.avro.MessageDefinition value) {
      validate(fields()[0], value);
      this.MsgDefBuilder = null;
      this.MsgDef = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'MsgDef' field has been set.
      * @return True if the 'MsgDef' field has been set, false otherwise.
      */
    public boolean hasMsgDef() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'MsgDef' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageDefinition.Builder getMsgDefBuilder() {
      if (MsgDefBuilder == null) {
        if (hasMsgDef()) {
          setMsgDefBuilder(com.anz.fastpayment.inward.avro.MessageDefinition.newBuilder(MsgDef));
        } else {
          setMsgDefBuilder(com.anz.fastpayment.inward.avro.MessageDefinition.newBuilder());
        }
      }
      return MsgDefBuilder;
    }

    /**
     * Sets the Builder instance for the 'MsgDef' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgDefBuilder(com.anz.fastpayment.inward.avro.MessageDefinition.Builder value) {
      clearMsgDef();
      MsgDefBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'MsgDef' field has an active Builder instance
     * @return True if the 'MsgDef' field has an active Builder instance
     */
    public boolean hasMsgDefBuilder() {
      return MsgDefBuilder != null;
    }

    /**
      * Clears the value of the 'MsgDef' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder clearMsgDef() {
      MsgDef = null;
      MsgDefBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MsgCtxt' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageContext getMsgCtxt() {
      return MsgCtxt;
    }


    /**
      * Sets the value of the 'MsgCtxt' field.
      * @param value The value of 'MsgCtxt'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgCtxt(com.anz.fastpayment.inward.avro.MessageContext value) {
      validate(fields()[1], value);
      this.MsgCtxtBuilder = null;
      this.MsgCtxt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MsgCtxt' field has been set.
      * @return True if the 'MsgCtxt' field has been set, false otherwise.
      */
    public boolean hasMsgCtxt() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'MsgCtxt' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageContext.Builder getMsgCtxtBuilder() {
      if (MsgCtxtBuilder == null) {
        if (hasMsgCtxt()) {
          setMsgCtxtBuilder(com.anz.fastpayment.inward.avro.MessageContext.newBuilder(MsgCtxt));
        } else {
          setMsgCtxtBuilder(com.anz.fastpayment.inward.avro.MessageContext.newBuilder());
        }
      }
      return MsgCtxtBuilder;
    }

    /**
     * Sets the Builder instance for the 'MsgCtxt' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgCtxtBuilder(com.anz.fastpayment.inward.avro.MessageContext.Builder value) {
      clearMsgCtxt();
      MsgCtxtBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'MsgCtxt' field has an active Builder instance
     * @return True if the 'MsgCtxt' field has an active Builder instance
     */
    public boolean hasMsgCtxtBuilder() {
      return MsgCtxtBuilder != null;
    }

    /**
      * Clears the value of the 'MsgCtxt' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder clearMsgCtxt() {
      MsgCtxt = null;
      MsgCtxtBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'MsgAddRq' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageAddRequest getMsgAddRq() {
      return MsgAddRq;
    }


    /**
      * Sets the value of the 'MsgAddRq' field.
      * @param value The value of 'MsgAddRq'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgAddRq(com.anz.fastpayment.inward.avro.MessageAddRequest value) {
      validate(fields()[2], value);
      this.MsgAddRqBuilder = null;
      this.MsgAddRq = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'MsgAddRq' field has been set.
      * @return True if the 'MsgAddRq' field has been set, false otherwise.
      */
    public boolean hasMsgAddRq() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'MsgAddRq' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder getMsgAddRqBuilder() {
      if (MsgAddRqBuilder == null) {
        if (hasMsgAddRq()) {
          setMsgAddRqBuilder(com.anz.fastpayment.inward.avro.MessageAddRequest.newBuilder(MsgAddRq));
        } else {
          setMsgAddRqBuilder(com.anz.fastpayment.inward.avro.MessageAddRequest.newBuilder());
        }
      }
      return MsgAddRqBuilder;
    }

    /**
     * Sets the Builder instance for the 'MsgAddRq' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.Instruction.Builder setMsgAddRqBuilder(com.anz.fastpayment.inward.avro.MessageAddRequest.Builder value) {
      clearMsgAddRq();
      MsgAddRqBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'MsgAddRq' field has an active Builder instance
     * @return True if the 'MsgAddRq' field has an active Builder instance
     */
    public boolean hasMsgAddRqBuilder() {
      return MsgAddRqBuilder != null;
    }

    /**
      * Clears the value of the 'MsgAddRq' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.Instruction.Builder clearMsgAddRq() {
      MsgAddRq = null;
      MsgAddRqBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Instruction build() {
      try {
        Instruction record = new Instruction();
        if (MsgDefBuilder != null) {
          try {
            record.MsgDef = this.MsgDefBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MsgDef"));
            throw e;
          }
        } else {
          record.MsgDef = fieldSetFlags()[0] ? this.MsgDef : (com.anz.fastpayment.inward.avro.MessageDefinition) defaultValue(fields()[0]);
        }
        if (MsgCtxtBuilder != null) {
          try {
            record.MsgCtxt = this.MsgCtxtBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MsgCtxt"));
            throw e;
          }
        } else {
          record.MsgCtxt = fieldSetFlags()[1] ? this.MsgCtxt : (com.anz.fastpayment.inward.avro.MessageContext) defaultValue(fields()[1]);
        }
        if (MsgAddRqBuilder != null) {
          try {
            record.MsgAddRq = this.MsgAddRqBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MsgAddRq"));
            throw e;
          }
        } else {
          record.MsgAddRq = fieldSetFlags()[2] ? this.MsgAddRq : (com.anz.fastpayment.inward.avro.MessageAddRequest) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Instruction>
    WRITER$ = (org.apache.avro.io.DatumWriter<Instruction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Instruction>
    READER$ = (org.apache.avro.io.DatumReader<Instruction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.MsgDef == null) {
      throw new IllegalStateException("MsgDef cannot be null for Instruction encoding");
    }
    this.MsgDef.customEncode(out);

    if (this.MsgCtxt == null) {
      throw new IllegalStateException("MsgCtxt cannot be null for Instruction encoding");
    }
    this.MsgCtxt.customEncode(out);

    if (this.MsgAddRq == null) {
      throw new IllegalStateException("MsgAddRq cannot be null for Instruction encoding");
    }
    this.MsgAddRq.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.MsgDef == null) {
        this.MsgDef = new com.anz.fastpayment.inward.avro.MessageDefinition();
      }
      this.MsgDef.customDecode(in);

      if (this.MsgCtxt == null) {
        this.MsgCtxt = new com.anz.fastpayment.inward.avro.MessageContext();
      }
      this.MsgCtxt.customDecode(in);

      if (this.MsgAddRq == null) {
        this.MsgAddRq = new com.anz.fastpayment.inward.avro.MessageAddRequest();
      }
      this.MsgAddRq.customDecode(in);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.MsgDef == null) {
            this.MsgDef = new com.anz.fastpayment.inward.avro.MessageDefinition();
          }
          this.MsgDef.customDecode(in);
          break;

        case 1:
          if (this.MsgCtxt == null) {
            this.MsgCtxt = new com.anz.fastpayment.inward.avro.MessageContext();
          }
          this.MsgCtxt.customDecode(in);
          break;

        case 2:
          if (this.MsgAddRq == null) {
            this.MsgAddRq = new com.anz.fastpayment.inward.avro.MessageAddRequest();
          }
          this.MsgAddRq.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










