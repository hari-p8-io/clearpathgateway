/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MessageAddRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5423730335194058658L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageAddRequest\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"OrigMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"MsgDtls\",\"type\":{\"type\":\"record\",\"name\":\"MessageDetails\",\"fields\":[{\"name\":\"DrctDbtTxInf\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransactionInfo\",\"fields\":[{\"name\":\"PmtId\",\"type\":{\"type\":\"record\",\"name\":\"PaymentId\",\"fields\":[{\"name\":\"InstrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TxId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"EndToEndId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ClrSysRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"IntrBkSttlmAmt\",\"type\":\"double\",\"doc\":\"Inter-bank settlement amount (legacy field - use IntrBkSttlmAmtMinor for precision)\"},{\"name\":\"IntrBkSttlmAmtMinor\",\"type\":\"long\",\"doc\":\"Inter-bank settlement amount in minor units (e.g., cents for USD) for precise monetary representation\",\"default\":0},{\"name\":\"IntrBkSttlmCCY\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IntrBkSttlmDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"InstgAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructingAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"InstdAgt\",\"type\":{\"type\":\"record\",\"name\":\"InstructedAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Dbtr\",\"type\":{\"type\":\"record\",\"name\":\"Debtor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DbtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"DbtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"DebtorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAgt\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAgent\",\"fields\":[{\"name\":\"BIC\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"Cdtr\",\"type\":{\"type\":\"record\",\"name\":\"Creditor\",\"fields\":[{\"name\":\"Nm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"CdtrAcct\",\"type\":{\"type\":\"record\",\"name\":\"CreditorAccount\",\"fields\":[{\"name\":\"AcctId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"Purp\",\"type\":{\"type\":\"record\",\"name\":\"Purpose\",\"fields\":[{\"name\":\"Cd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"RmtInf\",\"type\":{\"type\":\"record\",\"name\":\"RemittanceInformation\",\"fields\":[{\"name\":\"Ustrd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"DrctDbtTx\",\"type\":{\"type\":\"record\",\"name\":\"DirectDebitTransaction\",\"fields\":[{\"name\":\"MndtRltdInf\",\"type\":{\"type\":\"record\",\"name\":\"MandateRelatedInformation\",\"fields\":[{\"name\":\"MndtId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MessageAddRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MessageAddRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MessageAddRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MessageAddRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MessageAddRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MessageAddRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MessageAddRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MessageAddRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MessageAddRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String OrigMsg;
  private com.anz.fastpayment.inward.avro.MessageDetails MsgDtls;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageAddRequest() {}

  /**
   * All-args constructor.
   * @param OrigMsg The new value for OrigMsg
   * @param MsgDtls The new value for MsgDtls
   */
  public MessageAddRequest(java.lang.String OrigMsg, com.anz.fastpayment.inward.avro.MessageDetails MsgDtls) {
    this.OrigMsg = OrigMsg;
    this.MsgDtls = MsgDtls;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return OrigMsg;
    case 1: return MsgDtls;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: OrigMsg = value$ != null ? value$.toString() : null; break;
    case 1: MsgDtls = (com.anz.fastpayment.inward.avro.MessageDetails)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'OrigMsg' field.
   * @return The value of the 'OrigMsg' field.
   */
  public java.lang.String getOrigMsg() {
    return OrigMsg;
  }


  /**
   * Sets the value of the 'OrigMsg' field.
   * @param value the value to set.
   */
  public void setOrigMsg(java.lang.String value) {
    this.OrigMsg = value;
  }

  /**
   * Gets the value of the 'MsgDtls' field.
   * @return The value of the 'MsgDtls' field.
   */
  public com.anz.fastpayment.inward.avro.MessageDetails getMsgDtls() {
    return MsgDtls;
  }


  /**
   * Sets the value of the 'MsgDtls' field.
   * @param value the value to set.
   */
  public void setMsgDtls(com.anz.fastpayment.inward.avro.MessageDetails value) {
    this.MsgDtls = value;
  }

  /**
   * Creates a new MessageAddRequest RecordBuilder.
   * @return A new MessageAddRequest RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.MessageAddRequest.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.MessageAddRequest.Builder();
  }

  /**
   * Creates a new MessageAddRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageAddRequest RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.MessageAddRequest.Builder newBuilder(com.anz.fastpayment.inward.avro.MessageAddRequest.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.MessageAddRequest.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.MessageAddRequest.Builder(other);
    }
  }

  /**
   * Creates a new MessageAddRequest RecordBuilder by copying an existing MessageAddRequest instance.
   * @param other The existing instance to copy.
   * @return A new MessageAddRequest RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.MessageAddRequest.Builder newBuilder(com.anz.fastpayment.inward.avro.MessageAddRequest other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.MessageAddRequest.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.MessageAddRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for MessageAddRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageAddRequest>
    implements org.apache.avro.data.RecordBuilder<MessageAddRequest> {

    private java.lang.String OrigMsg;
    private com.anz.fastpayment.inward.avro.MessageDetails MsgDtls;
    private com.anz.fastpayment.inward.avro.MessageDetails.Builder MsgDtlsBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.MessageAddRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.OrigMsg)) {
        this.OrigMsg = data().deepCopy(fields()[0].schema(), other.OrigMsg);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.MsgDtls)) {
        this.MsgDtls = data().deepCopy(fields()[1].schema(), other.MsgDtls);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasMsgDtlsBuilder()) {
        this.MsgDtlsBuilder = com.anz.fastpayment.inward.avro.MessageDetails.newBuilder(other.getMsgDtlsBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MessageAddRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.MessageAddRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.OrigMsg)) {
        this.OrigMsg = data().deepCopy(fields()[0].schema(), other.OrigMsg);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MsgDtls)) {
        this.MsgDtls = data().deepCopy(fields()[1].schema(), other.MsgDtls);
        fieldSetFlags()[1] = true;
      }
      this.MsgDtlsBuilder = null;
    }

    /**
      * Gets the value of the 'OrigMsg' field.
      * @return The value.
      */
    public java.lang.String getOrigMsg() {
      return OrigMsg;
    }


    /**
      * Sets the value of the 'OrigMsg' field.
      * @param value The value of 'OrigMsg'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder setOrigMsg(java.lang.String value) {
      validate(fields()[0], value);
      this.OrigMsg = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'OrigMsg' field has been set.
      * @return True if the 'OrigMsg' field has been set, false otherwise.
      */
    public boolean hasOrigMsg() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'OrigMsg' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder clearOrigMsg() {
      OrigMsg = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MsgDtls' field.
      * @return The value.
      */
    public com.anz.fastpayment.inward.avro.MessageDetails getMsgDtls() {
      return MsgDtls;
    }


    /**
      * Sets the value of the 'MsgDtls' field.
      * @param value The value of 'MsgDtls'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder setMsgDtls(com.anz.fastpayment.inward.avro.MessageDetails value) {
      validate(fields()[1], value);
      this.MsgDtlsBuilder = null;
      this.MsgDtls = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MsgDtls' field has been set.
      * @return True if the 'MsgDtls' field has been set, false otherwise.
      */
    public boolean hasMsgDtls() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'MsgDtls' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.anz.fastpayment.inward.avro.MessageDetails.Builder getMsgDtlsBuilder() {
      if (MsgDtlsBuilder == null) {
        if (hasMsgDtls()) {
          setMsgDtlsBuilder(com.anz.fastpayment.inward.avro.MessageDetails.newBuilder(MsgDtls));
        } else {
          setMsgDtlsBuilder(com.anz.fastpayment.inward.avro.MessageDetails.newBuilder());
        }
      }
      return MsgDtlsBuilder;
    }

    /**
     * Sets the Builder instance for the 'MsgDtls' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder setMsgDtlsBuilder(com.anz.fastpayment.inward.avro.MessageDetails.Builder value) {
      clearMsgDtls();
      MsgDtlsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'MsgDtls' field has an active Builder instance
     * @return True if the 'MsgDtls' field has an active Builder instance
     */
    public boolean hasMsgDtlsBuilder() {
      return MsgDtlsBuilder != null;
    }

    /**
      * Clears the value of the 'MsgDtls' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.MessageAddRequest.Builder clearMsgDtls() {
      MsgDtls = null;
      MsgDtlsBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MessageAddRequest build() {
      try {
        MessageAddRequest record = new MessageAddRequest();
        record.OrigMsg = fieldSetFlags()[0] ? this.OrigMsg : (java.lang.String) defaultValue(fields()[0]);
        if (MsgDtlsBuilder != null) {
          try {
            record.MsgDtls = this.MsgDtlsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MsgDtls"));
            throw e;
          }
        } else {
          record.MsgDtls = fieldSetFlags()[1] ? this.MsgDtls : (com.anz.fastpayment.inward.avro.MessageDetails) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MessageAddRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<MessageAddRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MessageAddRequest>
    READER$ = (org.apache.avro.io.DatumReader<MessageAddRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.OrigMsg == null) {
      throw new IllegalStateException("OrigMsg cannot be null for MessageAddRequest encoding");
    }
    out.writeString(this.OrigMsg);

    if (this.MsgDtls == null) {
      throw new IllegalStateException("MsgDtls cannot be null for MessageAddRequest encoding");
    }
    this.MsgDtls.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.OrigMsg = in.readString();

      if (this.MsgDtls == null) {
        this.MsgDtls = new com.anz.fastpayment.inward.avro.MessageDetails();
      }
      this.MsgDtls.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.OrigMsg = in.readString();
          break;

        case 1:
          if (this.MsgDtls == null) {
            this.MsgDtls = new com.anz.fastpayment.inward.avro.MessageDetails();
          }
          this.MsgDtls.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










