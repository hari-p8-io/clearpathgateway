/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.anz.fastpayment.inward.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2704941016587744913L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentHeader\",\"namespace\":\"com.anz.fastpayment.inward.avro\",\"fields\":[{\"name\":\"PODsID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment identifier\"},{\"name\":\"ThirdPartyPayID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentTRN\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PaymentRetRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ProcDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentHeader> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentHeader> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentHeader> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentHeader> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentHeader> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentHeader to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentHeader from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentHeader instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentHeader fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String PODsID;
  /** Payment identifier */
  private java.lang.String PaymentID;
  private java.lang.String ThirdPartyPayID;
  private java.lang.String PaymentTRN;
  private java.lang.String PaymentRetRef;
  private java.lang.String ProcDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentHeader() {}

  /**
   * All-args constructor.
   * @param PODsID The new value for PODsID
   * @param PaymentID Payment identifier
   * @param ThirdPartyPayID The new value for ThirdPartyPayID
   * @param PaymentTRN The new value for PaymentTRN
   * @param PaymentRetRef The new value for PaymentRetRef
   * @param ProcDate The new value for ProcDate
   */
  public PaymentHeader(java.lang.String PODsID, java.lang.String PaymentID, java.lang.String ThirdPartyPayID, java.lang.String PaymentTRN, java.lang.String PaymentRetRef, java.lang.String ProcDate) {
    this.PODsID = PODsID;
    this.PaymentID = PaymentID;
    this.ThirdPartyPayID = ThirdPartyPayID;
    this.PaymentTRN = PaymentTRN;
    this.PaymentRetRef = PaymentRetRef;
    this.ProcDate = ProcDate;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PODsID;
    case 1: return PaymentID;
    case 2: return ThirdPartyPayID;
    case 3: return PaymentTRN;
    case 4: return PaymentRetRef;
    case 5: return ProcDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PODsID = value$ != null ? value$.toString() : null; break;
    case 1: PaymentID = value$ != null ? value$.toString() : null; break;
    case 2: ThirdPartyPayID = value$ != null ? value$.toString() : null; break;
    case 3: PaymentTRN = value$ != null ? value$.toString() : null; break;
    case 4: PaymentRetRef = value$ != null ? value$.toString() : null; break;
    case 5: ProcDate = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'PODsID' field.
   * @return The value of the 'PODsID' field.
   */
  public java.lang.String getPODsID() {
    return PODsID;
  }


  /**
   * Sets the value of the 'PODsID' field.
   * @param value the value to set.
   */
  public void setPODsID(java.lang.String value) {
    this.PODsID = value;
  }

  /**
   * Gets the value of the 'PaymentID' field.
   * @return Payment identifier
   */
  public java.lang.String getPaymentID() {
    return PaymentID;
  }


  /**
   * Sets the value of the 'PaymentID' field.
   * Payment identifier
   * @param value the value to set.
   */
  public void setPaymentID(java.lang.String value) {
    this.PaymentID = value;
  }

  /**
   * Gets the value of the 'ThirdPartyPayID' field.
   * @return The value of the 'ThirdPartyPayID' field.
   */
  public java.lang.String getThirdPartyPayID() {
    return ThirdPartyPayID;
  }


  /**
   * Sets the value of the 'ThirdPartyPayID' field.
   * @param value the value to set.
   */
  public void setThirdPartyPayID(java.lang.String value) {
    this.ThirdPartyPayID = value;
  }

  /**
   * Gets the value of the 'PaymentTRN' field.
   * @return The value of the 'PaymentTRN' field.
   */
  public java.lang.String getPaymentTRN() {
    return PaymentTRN;
  }


  /**
   * Sets the value of the 'PaymentTRN' field.
   * @param value the value to set.
   */
  public void setPaymentTRN(java.lang.String value) {
    this.PaymentTRN = value;
  }

  /**
   * Gets the value of the 'PaymentRetRef' field.
   * @return The value of the 'PaymentRetRef' field.
   */
  public java.lang.String getPaymentRetRef() {
    return PaymentRetRef;
  }


  /**
   * Sets the value of the 'PaymentRetRef' field.
   * @param value the value to set.
   */
  public void setPaymentRetRef(java.lang.String value) {
    this.PaymentRetRef = value;
  }

  /**
   * Gets the value of the 'ProcDate' field.
   * @return The value of the 'ProcDate' field.
   */
  public java.lang.String getProcDate() {
    return ProcDate;
  }


  /**
   * Sets the value of the 'ProcDate' field.
   * @param value the value to set.
   */
  public void setProcDate(java.lang.String value) {
    this.ProcDate = value;
  }

  /**
   * Creates a new PaymentHeader RecordBuilder.
   * @return A new PaymentHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentHeader.Builder newBuilder() {
    return new com.anz.fastpayment.inward.avro.PaymentHeader.Builder();
  }

  /**
   * Creates a new PaymentHeader RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentHeader.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentHeader.Builder other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentHeader.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentHeader.Builder(other);
    }
  }

  /**
   * Creates a new PaymentHeader RecordBuilder by copying an existing PaymentHeader instance.
   * @param other The existing instance to copy.
   * @return A new PaymentHeader RecordBuilder
   */
  public static com.anz.fastpayment.inward.avro.PaymentHeader.Builder newBuilder(com.anz.fastpayment.inward.avro.PaymentHeader other) {
    if (other == null) {
      return new com.anz.fastpayment.inward.avro.PaymentHeader.Builder();
    } else {
      return new com.anz.fastpayment.inward.avro.PaymentHeader.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentHeader instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentHeader>
    implements org.apache.avro.data.RecordBuilder<PaymentHeader> {

    private java.lang.String PODsID;
    /** Payment identifier */
    private java.lang.String PaymentID;
    private java.lang.String ThirdPartyPayID;
    private java.lang.String PaymentTRN;
    private java.lang.String PaymentRetRef;
    private java.lang.String ProcDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PODsID)) {
        this.PODsID = data().deepCopy(fields()[0].schema(), other.PODsID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.PaymentID)) {
        this.PaymentID = data().deepCopy(fields()[1].schema(), other.PaymentID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ThirdPartyPayID)) {
        this.ThirdPartyPayID = data().deepCopy(fields()[2].schema(), other.ThirdPartyPayID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.PaymentTRN)) {
        this.PaymentTRN = data().deepCopy(fields()[3].schema(), other.PaymentTRN);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.PaymentRetRef)) {
        this.PaymentRetRef = data().deepCopy(fields()[4].schema(), other.PaymentRetRef);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.ProcDate)) {
        this.ProcDate = data().deepCopy(fields()[5].schema(), other.ProcDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentHeader instance
     * @param other The existing instance to copy.
     */
    private Builder(com.anz.fastpayment.inward.avro.PaymentHeader other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.PODsID)) {
        this.PODsID = data().deepCopy(fields()[0].schema(), other.PODsID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PaymentID)) {
        this.PaymentID = data().deepCopy(fields()[1].schema(), other.PaymentID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ThirdPartyPayID)) {
        this.ThirdPartyPayID = data().deepCopy(fields()[2].schema(), other.ThirdPartyPayID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PaymentTRN)) {
        this.PaymentTRN = data().deepCopy(fields()[3].schema(), other.PaymentTRN);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PaymentRetRef)) {
        this.PaymentRetRef = data().deepCopy(fields()[4].schema(), other.PaymentRetRef);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ProcDate)) {
        this.ProcDate = data().deepCopy(fields()[5].schema(), other.ProcDate);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'PODsID' field.
      * @return The value.
      */
    public java.lang.String getPODsID() {
      return PODsID;
    }


    /**
      * Sets the value of the 'PODsID' field.
      * @param value The value of 'PODsID'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setPODsID(java.lang.String value) {
      validate(fields()[0], value);
      this.PODsID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'PODsID' field has been set.
      * @return True if the 'PODsID' field has been set, false otherwise.
      */
    public boolean hasPODsID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'PODsID' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearPODsID() {
      PODsID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentID' field.
      * Payment identifier
      * @return The value.
      */
    public java.lang.String getPaymentID() {
      return PaymentID;
    }


    /**
      * Sets the value of the 'PaymentID' field.
      * Payment identifier
      * @param value The value of 'PaymentID'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setPaymentID(java.lang.String value) {
      validate(fields()[1], value);
      this.PaymentID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentID' field has been set.
      * Payment identifier
      * @return True if the 'PaymentID' field has been set, false otherwise.
      */
    public boolean hasPaymentID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'PaymentID' field.
      * Payment identifier
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearPaymentID() {
      PaymentID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ThirdPartyPayID' field.
      * @return The value.
      */
    public java.lang.String getThirdPartyPayID() {
      return ThirdPartyPayID;
    }


    /**
      * Sets the value of the 'ThirdPartyPayID' field.
      * @param value The value of 'ThirdPartyPayID'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setThirdPartyPayID(java.lang.String value) {
      validate(fields()[2], value);
      this.ThirdPartyPayID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ThirdPartyPayID' field has been set.
      * @return True if the 'ThirdPartyPayID' field has been set, false otherwise.
      */
    public boolean hasThirdPartyPayID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ThirdPartyPayID' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearThirdPartyPayID() {
      ThirdPartyPayID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentTRN' field.
      * @return The value.
      */
    public java.lang.String getPaymentTRN() {
      return PaymentTRN;
    }


    /**
      * Sets the value of the 'PaymentTRN' field.
      * @param value The value of 'PaymentTRN'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setPaymentTRN(java.lang.String value) {
      validate(fields()[3], value);
      this.PaymentTRN = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentTRN' field has been set.
      * @return True if the 'PaymentTRN' field has been set, false otherwise.
      */
    public boolean hasPaymentTRN() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'PaymentTRN' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearPaymentTRN() {
      PaymentTRN = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentRetRef' field.
      * @return The value.
      */
    public java.lang.String getPaymentRetRef() {
      return PaymentRetRef;
    }


    /**
      * Sets the value of the 'PaymentRetRef' field.
      * @param value The value of 'PaymentRetRef'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setPaymentRetRef(java.lang.String value) {
      validate(fields()[4], value);
      this.PaymentRetRef = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentRetRef' field has been set.
      * @return True if the 'PaymentRetRef' field has been set, false otherwise.
      */
    public boolean hasPaymentRetRef() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'PaymentRetRef' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearPaymentRetRef() {
      PaymentRetRef = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ProcDate' field.
      * @return The value.
      */
    public java.lang.String getProcDate() {
      return ProcDate;
    }


    /**
      * Sets the value of the 'ProcDate' field.
      * @param value The value of 'ProcDate'.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder setProcDate(java.lang.String value) {
      validate(fields()[5], value);
      this.ProcDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ProcDate' field has been set.
      * @return True if the 'ProcDate' field has been set, false otherwise.
      */
    public boolean hasProcDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ProcDate' field.
      * @return This builder.
      */
    public com.anz.fastpayment.inward.avro.PaymentHeader.Builder clearProcDate() {
      ProcDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentHeader build() {
      try {
        PaymentHeader record = new PaymentHeader();
        record.PODsID = fieldSetFlags()[0] ? this.PODsID : (java.lang.String) defaultValue(fields()[0]);
        record.PaymentID = fieldSetFlags()[1] ? this.PaymentID : (java.lang.String) defaultValue(fields()[1]);
        record.ThirdPartyPayID = fieldSetFlags()[2] ? this.ThirdPartyPayID : (java.lang.String) defaultValue(fields()[2]);
        record.PaymentTRN = fieldSetFlags()[3] ? this.PaymentTRN : (java.lang.String) defaultValue(fields()[3]);
        record.PaymentRetRef = fieldSetFlags()[4] ? this.PaymentRetRef : (java.lang.String) defaultValue(fields()[4]);
        record.ProcDate = fieldSetFlags()[5] ? this.ProcDate : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentHeader>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentHeader>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentHeader>
    READER$ = (org.apache.avro.io.DatumReader<PaymentHeader>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.PODsID == null) {
      throw new IllegalStateException("PODsID cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.PODsID);

    if (this.PaymentID == null) {
      throw new IllegalStateException("PaymentID cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.PaymentID);

    if (this.ThirdPartyPayID == null) {
      throw new IllegalStateException("ThirdPartyPayID cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.ThirdPartyPayID);

    if (this.PaymentTRN == null) {
      throw new IllegalStateException("PaymentTRN cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.PaymentTRN);

    if (this.PaymentRetRef == null) {
      throw new IllegalStateException("PaymentRetRef cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.PaymentRetRef);

    if (this.ProcDate == null) {
      throw new IllegalStateException("ProcDate cannot be null for PaymentHeader encoding");
    }
    out.writeString(this.ProcDate);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.PODsID = in.readString();

      this.PaymentID = in.readString();

      this.ThirdPartyPayID = in.readString();

      this.PaymentTRN = in.readString();

      this.PaymentRetRef = in.readString();

      this.ProcDate = in.readString();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.PODsID = in.readString();
          break;

        case 1:
          this.PaymentID = in.readString();
          break;

        case 2:
          this.ThirdPartyPayID = in.readString();
          break;

        case 3:
          this.PaymentTRN = in.readString();
          break;

        case 4:
          this.PaymentRetRef = in.readString();
          break;

        case 5:
          this.ProcDate = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










